const t=JSON.parse('{"key":"v-e88ec35c","path":"/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/2025%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98/2025%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98-%E8%BF%9B%E9%98%B6%E7%AF%87ts.html","title":"2025前端最新面试题-进阶篇ts","lang":"zh-CN","frontmatter":{"description":"2025前端最新面试题-进阶篇ts 1. 你讲一下，你对 ts 泛型的理解？ 在业务逻辑时，如果有某些函数逻辑重复率高，但是类型不同 那么就可以定义泛型，等执行时再给予特定的类型 当时，用泛型写太多逻辑的话，会显得复杂，难易理解，通常能不用就不用 2. 说说你对枚举类型的理解？ 是什么？ 一种整型常数集合 使用？ enum xxx { ... }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/DaMaiCoding-Note/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/2025%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98/2025%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98-%E8%BF%9B%E9%98%B6%E7%AF%87ts.html"}],["meta",{"property":"og:site_name","content":"DaMaiCoding-Note"}],["meta",{"property":"og:title","content":"2025前端最新面试题-进阶篇ts"}],["meta",{"property":"og:description","content":"2025前端最新面试题-进阶篇ts 1. 你讲一下，你对 ts 泛型的理解？ 在业务逻辑时，如果有某些函数逻辑重复率高，但是类型不同 那么就可以定义泛型，等执行时再给予特定的类型 当时，用泛型写太多逻辑的话，会显得复杂，难易理解，通常能不用就不用 2. 说说你对枚举类型的理解？ 是什么？ 一种整型常数集合 使用？ enum xxx { ... }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-20T10:06:50.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-20T10:06:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2025前端最新面试题-进阶篇ts\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-20T10:06:50.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1. 你讲一下，你对 ts 泛型的理解？","slug":"_1-你讲一下-你对-ts-泛型的理解","link":"#_1-你讲一下-你对-ts-泛型的理解","children":[]},{"level":2,"title":"2. 说说你对枚举类型的理解？","slug":"_2-说说你对枚举类型的理解","link":"#_2-说说你对枚举类型的理解","children":[]},{"level":2,"title":"3. Promise 为什么可以一直 then 下去？","slug":"_3-promise-为什么可以一直-then-下去","link":"#_3-promise-为什么可以一直-then-下去","children":[]},{"level":2,"title":"4. js 与 ts 类型对比","slug":"_4-js-与-ts-类型对比","link":"#_4-js-与-ts-类型对比","children":[]}],"git":{"createdTime":1740046010000,"updatedTime":1740046010000,"contributors":[{"name":"linzeqin","email":"1351123861@qq.com","commits":1}]},"readingTime":{"minutes":1.08,"words":323},"filePathRelative":"前端面试题/2025前端最新面试题/2025前端最新面试题-进阶篇ts.md","localizedDate":"2025年2月20日","excerpt":"<h1> 2025前端最新面试题-进阶篇ts</h1>\\n<h2> 1. 你讲一下，你对 ts 泛型的理解？</h2>\\n<p>在业务逻辑时，如果有某些函数逻辑重复率高，但是类型不同</p>\\n<p>那么就可以定义泛型，等执行时再给予特定的类型</p>\\n<p>当时，用泛型写太多逻辑的话，会显得复杂，难易理解，通常能不用就不用</p>\\n<h2> 2. 说说你对枚举类型的理解？</h2>\\n<p><strong>是什么？</strong></p>\\n<p>一种整型常数集合</p>\\n<p><strong>使用？</strong></p>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">enum</span> xxx <span class=\\"token punctuation\\">{</span> <span class=\\"token operator\\">...</span> <span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
