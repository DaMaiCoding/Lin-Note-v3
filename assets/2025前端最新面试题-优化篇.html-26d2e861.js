const e=JSON.parse('{"key":"v-177cf8b5","path":"/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/2025%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98/2025%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98-%E4%BC%98%E5%8C%96%E7%AF%87.html","title":"2025前端最新面试题-优化篇","lang":"zh-CN","frontmatter":{"description":"2025前端最新面试题-优化篇 核心思想 原则 多使用内存、缓存, 减少计算、减少网络请求 方向 加载页面, 页面渲染, 页面操作流畅度 1. Vue 中的性能优化？ 编码方面： 不需要渲染到视图的数据，不要定义成响应式数，这样可以减少 Vue 监听性能消耗 v-if 与 v-for 不要连用，将 v-if 提高到更外一层 v-for 每项元素绑定事件时，使用事件代理 v-for 时，key 要唯一 根据项目情况，合理使用 懒加载、防抖节流、动态加载","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/DaMaiCoding-Note/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/2025%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98/2025%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98-%E4%BC%98%E5%8C%96%E7%AF%87.html"}],["meta",{"property":"og:site_name","content":"DaMaiCoding-Note"}],["meta",{"property":"og:title","content":"2025前端最新面试题-优化篇"}],["meta",{"property":"og:description","content":"2025前端最新面试题-优化篇 核心思想 原则 多使用内存、缓存, 减少计算、减少网络请求 方向 加载页面, 页面渲染, 页面操作流畅度 1. Vue 中的性能优化？ 编码方面： 不需要渲染到视图的数据，不要定义成响应式数，这样可以减少 Vue 监听性能消耗 v-if 与 v-for 不要连用，将 v-if 提高到更外一层 v-for 每项元素绑定事件时，使用事件代理 v-for 时，key 要唯一 根据项目情况，合理使用 懒加载、防抖节流、动态加载"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-20T10:06:50.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-20T10:06:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2025前端最新面试题-优化篇\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-20T10:06:50.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"核心思想","slug":"核心思想","link":"#核心思想","children":[]},{"level":2,"title":"1. Vue 中的性能优化？","slug":"_1-vue-中的性能优化","link":"#_1-vue-中的性能优化","children":[]},{"level":2,"title":"2. Uniapp 中的性能优化？","slug":"_2-uniapp-中的性能优化","link":"#_2-uniapp-中的性能优化","children":[]},{"level":2,"title":"3. eachrts 图表百万数据展现优化？","slug":"_3-eachrts-图表百万数据展现优化","link":"#_3-eachrts-图表百万数据展现优化","children":[]},{"level":2,"title":"4. echarts 图表问题？","slug":"_4-echarts-图表问题","link":"#_4-echarts-图表问题","children":[]},{"level":2,"title":"5. 可视化大屏适配","slug":"_5-可视化大屏适配","link":"#_5-可视化大屏适配","children":[]}],"git":{"createdTime":1740046010000,"updatedTime":1740046010000,"contributors":[{"name":"linzeqin","email":"1351123861@qq.com","commits":1}]},"readingTime":{"minutes":2.74,"words":822},"filePathRelative":"前端面试题/2025前端最新面试题/2025前端最新面试题-优化篇.md","localizedDate":"2025年2月20日","excerpt":"<h1> 2025前端最新面试题-优化篇</h1>\\n<h2> 核心思想</h2>\\n<p><strong>原则</strong></p>\\n<p>多使用内存、缓存, 减少计算、减少网络请求</p>\\n<p><strong>方向</strong></p>\\n<p>加载页面, 页面渲染, 页面操作流畅度</p>\\n<h2> 1. Vue 中的性能优化？</h2>\\n<p><strong>编码方面：</strong></p>\\n<ul>\\n<li>不需要渲染到视图的数据，不要定义成响应式数，这样可以减少 Vue 监听性能消耗</li>\\n<li>v-if 与 v-for 不要连用，将 <code>v-if</code> 提高到更外一层</li>\\n<li>v-for 每项元素绑定事件时，使用事件代理</li>\\n<li>v-for 时，key 要唯一</li>\\n<li>根据项目情况，合理使用 懒加载、防抖节流、动态加载</li>\\n</ul>","autoDesc":true}');export{e as data};
