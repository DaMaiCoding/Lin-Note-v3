const e=JSON.parse('{"key":"v-5dc3c4f5","path":"/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E9%A2%98/javascript-%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86%E7%82%B9.html","title":"javascript-补充知识点","lang":"zh-CN","frontmatter":{"description":"javascript-补充知识点 1. Map、Set、Object Array 的区别 Map 与 Object Map 有序结构, key 任意类型; Object 无序结构, key 两种类型 (String、Symbol) Set 可以自动去重 (很多去重方法比较快的) Map 和 Set 比 Object Array 整体要执行更快 Map 与 Set 不同 初始化需要的值不一样，Map 需要的是一个二维数组，而 Set 需要的是一维 Array 数组","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/Lin-Note-v3/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E9%A2%98/javascript-%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86%E7%82%B9.html"}],["meta",{"property":"og:site_name","content":"坡罗斜"}],["meta",{"property":"og:title","content":"javascript-补充知识点"}],["meta",{"property":"og:description","content":"javascript-补充知识点 1. Map、Set、Object Array 的区别 Map 与 Object Map 有序结构, key 任意类型; Object 无序结构, key 两种类型 (String、Symbol) Set 可以自动去重 (很多去重方法比较快的) Map 和 Set 比 Object Array 整体要执行更快 Map 与 Set 不同 初始化需要的值不一样，Map 需要的是一个二维数组，而 Set 需要的是一维 Array 数组"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/Lin-Note-v3/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-16T16:56:25.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"javascript-补充知识点"}],["meta",{"property":"article:modified_time","content":"2023-07-16T16:56:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"javascript-补充知识点\\",\\"image\\":[\\"https://mister-hope.github.io/Lin-Note-v3/\\"],\\"dateModified\\":\\"2023-07-16T16:56:25.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1. Map、Set、Object Array 的区别","slug":"_1-map、set、object-array-的区别","link":"#_1-map、set、object-array-的区别","children":[]},{"level":2,"title":"2. 闭包","slug":"_2-闭包","link":"#_2-闭包","children":[]},{"level":2,"title":"3. JS 基本知识","slug":"_3-js-基本知识","link":"#_3-js-基本知识","children":[]},{"level":2,"title":"4. 截取 数组最快的办法","slug":"_4-截取-数组最快的办法","link":"#_4-截取-数组最快的办法","children":[]},{"level":2,"title":"5. DOM 和 BOM 的区别？","slug":"_5-dom-和-bom-的区别","link":"#_5-dom-和-bom-的区别","children":[]},{"level":2,"title":"6. 普通事件绑定和事件流绑定有啥区别（中级）","slug":"_6-普通事件绑定和事件流绑定有啥区别-中级","link":"#_6-普通事件绑定和事件流绑定有啥区别-中级","children":[]},{"level":2,"title":"7. 如何阻止事件冒泡和默认事件（中级）","slug":"_7-如何阻止事件冒泡和默认事件-中级","link":"#_7-如何阻止事件冒泡和默认事件-中级","children":[]},{"level":2,"title":"8. document.onload 和 document.ready、window.onload（初级）","slug":"_8-document-onload-和-document-ready、window-onload-初级","link":"#_8-document-onload-和-document-ready、window-onload-初级","children":[]},{"level":2,"title":"9. undefined 的三种情况（初级）","slug":"_9-undefined-的三种情况-初级","link":"#_9-undefined-的三种情况-初级","children":[]},{"level":2,"title":"10. 对象模型 BOM 里常用的至少4个对象（初级）","slug":"_10-对象模型-bom-里常用的至少4个对象-初级","link":"#_10-对象模型-bom-里常用的至少4个对象-初级","children":[]},{"level":2,"title":"11. JavaScript 存储对象是哪两个 (初级)","slug":"_11-javascript-存储对象是哪两个-初级","link":"#_11-javascript-存储对象是哪两个-初级","children":[]},{"level":2,"title":"12. 会造成内存泄漏的情况（中级）","slug":"_12-会造成内存泄漏的情况-中级","link":"#_12-会造成内存泄漏的情况-中级","children":[]},{"level":2,"title":"13. 闭包中变量如何释放","slug":"_13-闭包中变量如何释放","link":"#_13-闭包中变量如何释放","children":[]},{"level":2,"title":"14. instanceof 和 typeof 的区别","slug":"_14-instanceof-和-typeof-的区别","link":"#_14-instanceof-和-typeof-的区别","children":[]},{"level":2,"title":"15. ES6 的模板字符串","slug":"_15-es6-的模板字符串","link":"#_15-es6-的模板字符串","children":[]},{"level":2,"title":"16. var 和 let const 的区别","slug":"_16-var-和-let-const-的区别","link":"#_16-var-和-let-const-的区别","children":[]},{"level":2,"title":"18. 列举强制类型转换和隐式转换","slug":"_18-列举强制类型转换和隐式转换","link":"#_18-列举强制类型转换和隐式转换","children":[]},{"level":2,"title":"19. 函数表达式 VS 函数声明","slug":"_19-函数表达式-vs-函数声明","link":"#_19-函数表达式-vs-函数声明","children":[]},{"level":2,"title":"20. 手写深度比较, 模拟 lodash isEqual","slug":"_20-手写深度比较-模拟-lodash-isequal","link":"#_20-手写深度比较-模拟-lodash-isequal","children":[]},{"level":2,"title":"21. split() 和 join() 的区别","slug":"_21-split-和-join-的区别","link":"#_21-split-和-join-的区别","children":[]},{"level":2,"title":"22. 数组哪些 API, 是纯函数","slug":"_22-数组哪些-api-是纯函数","link":"#_22-数组哪些-api-是纯函数","children":[]},{"level":2,"title":"23. 数组 slice 和 splice 的区别","slug":"_23-数组-slice-和-splice-的区别","link":"#_23-数组-slice-和-splice-的区别","children":[]},{"level":2,"title":"24. [10, 20, 30].map(parseInt) 返回结果是什么？","slug":"_24-10-20-30-map-parseint-返回结果是什么","link":"#_24-10-20-30-map-parseint-返回结果是什么","children":[]},{"level":2,"title":"25. ajax 请求 get 和 post 的区别？","slug":"_25-ajax-请求-get-和-post-的区别","link":"#_25-ajax-请求-get-和-post-的区别","children":[]},{"level":2,"title":"26. call、apply、bind的区别？","slug":"_26-call、apply、bind的区别","link":"#_26-call、apply、bind的区别","children":[]},{"level":2,"title":"27. 事件代理 (委托) 是什么？","slug":"_27-事件代理-委托-是什么","link":"#_27-事件代理-委托-是什么","children":[]},{"level":2,"title":"28. 闭包是什么, 有什么特征? 有什么负面影响？","slug":"_28-闭包是什么-有什么特征-有什么负面影响","link":"#_28-闭包是什么-有什么特征-有什么负面影响","children":[]},{"level":2,"title":"29. new Object() 和 Object.create() 的区别","slug":"_29-new-object-和-object-create-的区别","link":"#_29-new-object-和-object-create-的区别","children":[]},{"level":2,"title":"30. 关于 this","slug":"_30-关于-this","link":"#_30-关于-this","children":[]},{"level":2,"title":"31. 常见正则表达式","slug":"_31-常见正则表达式","link":"#_31-常见正则表达式","children":[]},{"level":2,"title":"32. 作用域和自由变量的场景题","slug":"_32-作用域和自由变量的场景题","link":"#_32-作用域和自由变量的场景题","children":[]},{"level":2,"title":"33. 手写字符串 trim 方法, 保证浏览器兼容性","slug":"_33-手写字符串-trim-方法-保证浏览器兼容性","link":"#_33-手写字符串-trim-方法-保证浏览器兼容性","children":[]},{"level":2,"title":"34. 如何获取多个数字中的最大值","slug":"_34-如何获取多个数字中的最大值","link":"#_34-如何获取多个数字中的最大值","children":[]},{"level":2,"title":"35. 如何用 JS 实现继承？","slug":"_35-如何用-js-实现继承","link":"#_35-如何用-js-实现继承","children":[]},{"level":2,"title":"36. 如何捕获 JS 程序的异常？","slug":"_36-如何捕获-js-程序的异常","link":"#_36-如何捕获-js-程序的异常","children":[]},{"level":2,"title":"37. 什么是 JSON","slug":"_37-什么是-json","link":"#_37-什么是-json","children":[]},{"level":2,"title":"38. 获取当前页面 url 参数","slug":"_38-获取当前页面-url-参数","link":"#_38-获取当前页面-url-参数","children":[]},{"level":2,"title":"39. 将 url 参数解析为 JS 对象","slug":"_39-将-url-参数解析为-js-对象","link":"#_39-将-url-参数解析为-js-对象","children":[]},{"level":2,"title":"40. 手写数组 flatern, 考虑多层级","slug":"_40-手写数组-flatern-考虑多层级","link":"#_40-手写数组-flatern-考虑多层级","children":[]},{"level":2,"title":"41. 数组去重","slug":"_41-数组去重","link":"#_41-数组去重","children":[]},{"level":2,"title":"42. 介绍 RAF requestAnimationFrame","slug":"_42-介绍-raf-requestanimationframe","link":"#_42-介绍-raf-requestanimationframe","children":[]},{"level":2,"title":"43. 如何性能优化, 从哪几个方面考虑","slug":"_43-如何性能优化-从哪几个方面考虑","link":"#_43-如何性能优化-从哪几个方面考虑","children":[]},{"level":2,"title":"44. 深拷贝 和 浅拷贝的区别?","slug":"_44-深拷贝-和-浅拷贝的区别","link":"#_44-深拷贝-和-浅拷贝的区别","children":[]},{"level":2,"title":"45. ES6 的新特征","slug":"_45-es6-的新特征","link":"#_45-es6-的新特征","children":[]},{"level":2,"title":"46. 事件循环","slug":"_46-事件循环","link":"#_46-事件循环","children":[]},{"level":2,"title":"47. 什么时候使用 .stop 阻止事件冒泡","slug":"_47-什么时候使用-stop-阻止事件冒泡","link":"#_47-什么时候使用-stop-阻止事件冒泡","children":[]},{"level":2,"title":"48. 怎么判断一个数是不是素数","slug":"_48-怎么判断一个数是不是素数","link":"#_48-怎么判断一个数是不是素数","children":[]},{"level":2,"title":"49. 操作字符串有哪些 API?","slug":"_49-操作字符串有哪些-api","link":"#_49-操作字符串有哪些-api","children":[]},{"level":2,"title":"50. 操作对象有哪些 API?","slug":"_50-操作对象有哪些-api","link":"#_50-操作对象有哪些-api","children":[]},{"level":2,"title":"51. 两个异步请求如何合并?","slug":"_51-两个异步请求如何合并","link":"#_51-两个异步请求如何合并","children":[]},{"level":2,"title":"52. v-model 是谁的语法糖?","slug":"_52-v-model-是谁的语法糖","link":"#_52-v-model-是谁的语法糖","children":[]},{"level":2,"title":"53. Promise有哪几种状态，各个状态之间是如何进行转换的？","slug":"_53-promise有哪几种状态-各个状态之间是如何进行转换的","link":"#_53-promise有哪几种状态-各个状态之间是如何进行转换的","children":[]},{"level":2,"title":"54. Promise 解决哪些问题?","slug":"_54-promise-解决哪些问题","link":"#_54-promise-解决哪些问题","children":[]},{"level":2,"title":"55. async/await 解决了什么问题?","slug":"_55-async-await-解决了什么问题","link":"#_55-async-await-解决了什么问题","children":[]},{"level":2,"title":"56. const 定义对象里面的属性值能不能改变?","slug":"_56-const-定义对象里面的属性值能不能改变","link":"#_56-const-定义对象里面的属性值能不能改变","children":[]},{"level":2,"title":"57. 对比两个数组是否相等?","slug":"_57-对比两个数组是否相等","link":"#_57-对比两个数组是否相等","children":[]},{"level":2,"title":"58. Promise.all、Promise.any、Promise.race、Promise.allsettled","slug":"_58-promise-all、promise-any、promise-race、promise-allsettled","link":"#_58-promise-all、promise-any、promise-race、promise-allsettled","children":[{"level":3,"title":"Promise.all","slug":"promise-all","link":"#promise-all","children":[]},{"level":3,"title":"Promise.any","slug":"promise-any","link":"#promise-any","children":[]},{"level":3,"title":"Promise.race","slug":"promise-race","link":"#promise-race","children":[]},{"level":3,"title":"Promise.allsettled","slug":"promise-allsettled","link":"#promise-allsettled","children":[]}]},{"level":2,"title":"59. js 中的 get、set","slug":"_59-js-中的-get、set","link":"#_59-js-中的-get、set","children":[]},{"level":2,"title":"60. new函数() 和 普通函数() 的区别","slug":"_60-new函数-和-普通函数-的区别","link":"#_60-new函数-和-普通函数-的区别","children":[]},{"level":2,"title":"61. JavaScript 有哪几种方法判断变量的类型?","slug":"_61-javascript-有哪几种方法判断变量的类型","link":"#_61-javascript-有哪几种方法判断变量的类型","children":[{"level":3,"title":"typeof","slug":"typeof","link":"#typeof","children":[]},{"level":3,"title":"instanceof","slug":"instanceof","link":"#instanceof","children":[]},{"level":3,"title":"Object.prototype.toString.call()","slug":"object-prototype-tostring-call","link":"#object-prototype-tostring-call","children":[]},{"level":3,"title":"constructor","slug":"constructor","link":"#constructor","children":[]}]},{"level":2,"title":"62. import * as 作用是什么","slug":"_62-import-as-作用是什么","link":"#_62-import-as-作用是什么","children":[]},{"level":2,"title":"63. new fn 与 new fn() 的区别？","slug":"_63-new-fn-与-new-fn-的区别","link":"#_63-new-fn-与-new-fn-的区别","children":[]},{"level":2,"title":"64. 前端递增、后端递增 区别？","slug":"_64-前端递增、后端递增-区别","link":"#_64-前端递增、后端递增-区别","children":[]},{"level":2,"title":"65. require 和 import 之间的区别","slug":"_65-require-和-import-之间的区别","link":"#_65-require-和-import-之间的区别","children":[]}],"git":{"createdTime":1687101610000,"updatedTime":1689526585000,"contributors":[{"name":"Jack_Lin","email":"1351123861@qq.com","commits":2}]},"readingTime":{"minutes":27.4,"words":8219},"filePathRelative":"前端面试题/基础面试题/javascript-补充知识点.md","localizedDate":"2023年6月18日","excerpt":"<h1> javascript-补充知识点</h1>\\n<h2> 1. Map、Set、Object Array 的区别</h2>\\n<p>Map 与 Object</p>\\n<ul>\\n<li>Map 有序结构, key 任意类型; Object 无序结构, key 两种类型 (String、Symbol)</li>\\n<li>Set 可以自动去重 (很多去重方法比较快的)</li>\\n<li>Map 和 Set 比 Object Array 整体要执行更快</li>\\n</ul>\\n<p>Map 与 Set 不同</p>\\n<ul>\\n<li>初始化需要的值不一样，Map 需要的是一个二维数组，而 Set 需要的是一维 Array 数组</li>\\n</ul>","autoDesc":true}');export{e as data};
