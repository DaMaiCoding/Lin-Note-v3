const l=JSON.parse('{"key":"v-79e2d799","path":"/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/2025%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98/2025%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98-%E6%A1%86%E6%9E%B6%E7%AF%87react.html","title":"2025前端最新面试题-框架篇react","lang":"zh-CN","frontmatter":{"description":"2025前端最新面试题-框架篇react [扩展] React基础 环境配置 创建项目 Create-React-App 创建, 官网推荐, 比较稳定 安装 如果不加 --template typescript 项目会默认使用 javascript","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/DaMaiCoding-Note/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/2025%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98/2025%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98-%E6%A1%86%E6%9E%B6%E7%AF%87react.html"}],["meta",{"property":"og:site_name","content":"DaMaiCoding-Note"}],["meta",{"property":"og:title","content":"2025前端最新面试题-框架篇react"}],["meta",{"property":"og:description","content":"2025前端最新面试题-框架篇react [扩展] React基础 环境配置 创建项目 Create-React-App 创建, 官网推荐, 比较稳定 安装 如果不加 --template typescript 项目会默认使用 javascript"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/DaMaiCoding-Note/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-20T10:06:50.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"2025前端最新面试题-框架篇react"}],["meta",{"property":"article:modified_time","content":"2025-02-20T10:06:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2025前端最新面试题-框架篇react\\",\\"image\\":[\\"https://mister-hope.github.io/DaMaiCoding-Note/\\"],\\"dateModified\\":\\"2025-02-20T10:06:50.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"环境配置","slug":"环境配置","link":"#环境配置","children":[{"level":3,"title":"创建项目","slug":"创建项目","link":"#创建项目","children":[]}]},{"level":2,"title":"代码规范","slug":"代码规范","link":"#代码规范","children":[{"level":3,"title":"两者区别","slug":"两者区别","link":"#两者区别","children":[]},{"level":3,"title":"eslint","slug":"eslint","link":"#eslint","children":[]},{"level":3,"title":"prettier","slug":"prettier","link":"#prettier","children":[]}]},{"level":2,"title":"JSX","slug":"jsx","link":"#jsx","children":[{"level":3,"title":"JSX 与 标签的区别","slug":"jsx-与-标签的区别","link":"#jsx-与-标签的区别","children":[]},{"level":3,"title":"JSX 的属性","slug":"jsx-的属性","link":"#jsx-的属性","children":[]},{"level":3,"title":"JSX 中监听 DOM 事件","slug":"jsx-中监听-dom-事件","link":"#jsx-中监听-dom-事件","children":[]},{"level":3,"title":"JSX 函数传递 额外参数","slug":"jsx-函数传递-额外参数","link":"#jsx-函数传递-额外参数","children":[]},{"level":3,"title":"JSX 中变量与表达式的插入","slug":"jsx-中变量与表达式的插入","link":"#jsx-中变量与表达式的插入","children":[]},{"level":3,"title":"JSX 中的注释","slug":"jsx-中的注释","link":"#jsx-中的注释","children":[]},{"level":3,"title":"JSX 中条件判断","slug":"jsx-中条件判断","link":"#jsx-中条件判断","children":[]},{"level":3,"title":"JSX 循环的使用","slug":"jsx-循环的使用","link":"#jsx-循环的使用","children":[]},{"level":3,"title":"JSX 与 Vue 设计理念的区别","slug":"jsx-与-vue-设计理念的区别","link":"#jsx-与-vue-设计理念的区别","children":[]},{"level":3,"title":"JSX 中使用 html","slug":"jsx-中使用-html","link":"#jsx-中使用-html","children":[]},{"level":3,"title":"JSX 显示与隐藏","slug":"jsx-显示与隐藏","link":"#jsx-显示与隐藏","children":[]},{"level":3,"title":"小结","slug":"小结","link":"#小结","children":[]}]},{"level":2,"title":"增、删、改、查","slug":"增、删、改、查","link":"#增、删、改、查","children":[{"level":3,"title":"基本操作的语法","slug":"基本操作的语法","link":"#基本操作的语法","children":[]},{"level":3,"title":"immer","slug":"immer","link":"#immer","children":[]}]},{"level":2,"title":"合成事件","slug":"合成事件","link":"#合成事件","children":[{"level":3,"title":"基本使用","slug":"基本使用","link":"#基本使用","children":[]},{"level":3,"title":"为什么会有 合成事件？","slug":"为什么会有-合成事件","link":"#为什么会有-合成事件","children":[]},{"level":3,"title":"普通事件 执行顺序？","slug":"普通事件-执行顺序","link":"#普通事件-执行顺序","children":[]},{"level":3,"title":"什么是 事件委托、事件监听？","slug":"什么是-事件委托、事件监听","link":"#什么是-事件委托、事件监听","children":[]},{"level":3,"title":"如何阻止原生事件","slug":"如何阻止原生事件","link":"#如何阻止原生事件","children":[]},{"level":3,"title":"原生事件 与 合成事件 的执行顺序？","slug":"原生事件-与-合成事件-的执行顺序","link":"#原生事件-与-合成事件-的执行顺序","children":[]}]},{"level":2,"title":"Typescript 类型基础知识补充","slug":"typescript-类型基础知识补充","link":"#typescript-类型基础知识补充","children":[{"level":3,"title":"<T> 泛型的使用","slug":"t-泛型的使用","link":"#t-泛型的使用","children":[]},{"level":3,"title":"泛型定义一个数组","slug":"泛型定义一个数组","link":"#泛型定义一个数组","children":[]},{"level":3,"title":"TS 中获取一个类型","slug":"ts-中获取一个类型","link":"#ts-中获取一个类型","children":[]},{"level":3,"title":"函数返回值类型定义","slug":"函数返回值类型定义","link":"#函数返回值类型定义","children":[]},{"level":3,"title":"解构重命名","slug":"解构重命名","link":"#解构重命名","children":[]},{"level":3,"title":"Partial 的妙用","slug":"partial-的妙用","link":"#partial-的妙用","children":[]},{"level":3,"title":"Required 的妙用","slug":"required-的妙用","link":"#required-的妙用","children":[]}]},{"level":2,"title":"组件 与 props","slug":"组件-与-props","link":"#组件-与-props","children":[{"level":3,"title":"React 一切皆组件","slug":"react-一切皆组件","link":"#react-一切皆组件","children":[]},{"level":3,"title":"React.FC 与 JSX.Element","slug":"react-fc-与-jsx-element","link":"#react-fc-与-jsx-element","children":[]},{"level":3,"title":"组件通信","slug":"组件通信","link":"#组件通信","children":[]},{"level":3,"title":"props 如何设置默认值","slug":"props-如何设置默认值","link":"#props-如何设置默认值","children":[]},{"level":3,"title":"父组件获取子组件的方法","slug":"父组件获取子组件的方法","link":"#父组件获取子组件的方法","children":[]},{"level":3,"title":"Props.children","slug":"props-children","link":"#props-children","children":[]},{"level":3,"title":"状态提升","slug":"状态提升","link":"#状态提升","children":[]},{"level":3,"title":"Outlet","slug":"outlet","link":"#outlet","children":[]},{"level":3,"title":"受控组件 与 非受控组件","slug":"受控组件-与-非受控组件","link":"#受控组件-与-非受控组件","children":[]},{"level":3,"title":"Fragment","slug":"fragment","link":"#fragment","children":[]},{"level":3,"title":"插槽","slug":"插槽","link":"#插槽","children":[]},{"level":3,"title":"React 高阶组件","slug":"react-高阶组件","link":"#react-高阶组件","children":[]}]},{"level":2,"title":"Hooks","slug":"hooks","link":"#hooks","children":[{"level":3,"title":"为什么 react 需要使用到 useState 这样的钩子函数呢","slug":"为什么-react-需要使用到-usestate-这样的钩子函数呢","link":"#为什么-react-需要使用到-usestate-这样的钩子函数呢","children":[]},{"level":3,"title":"为什么useState返回值是数组，而不是对象？","slug":"为什么usestate返回值是数组-而不是对象","link":"#为什么usestate返回值是数组-而不是对象","children":[]},{"level":3,"title":"state 有哪些特点?","slug":"state-有哪些特点","link":"#state-有哪些特点","children":[]},{"level":3,"title":"useEffect","slug":"useeffect","link":"#useeffect","children":[]},{"level":3,"title":"useRef","slug":"useref","link":"#useref","children":[]},{"level":3,"title":"useMemo","slug":"usememo","link":"#usememo","children":[]},{"level":3,"title":"useCallback","slug":"usecallback","link":"#usecallback","children":[]},{"level":3,"title":"useReducer","slug":"usereducer","link":"#usereducer","children":[]},{"level":3,"title":"forwardRef","slug":"forwardref","link":"#forwardref","children":[]},{"level":3,"title":"自定义 hooks","slug":"自定义-hooks","link":"#自定义-hooks","children":[]},{"level":3,"title":"react 中 hooks 的命名","slug":"react-中-hooks-的命名","link":"#react-中-hooks-的命名","children":[]},{"level":3,"title":"文件中 引入的先后顺序","slug":"文件中-引入的先后顺序","link":"#文件中-引入的先后顺序","children":[]},{"level":3,"title":"组件生命周期","slug":"组件生命周期","link":"#组件生命周期","children":[]},{"level":3,"title":"第三方 Hooks 的使用","slug":"第三方-hooks-的使用","link":"#第三方-hooks-的使用","children":[]},{"level":3,"title":"Hooks 使用规则","slug":"hooks-使用规则","link":"#hooks-使用规则","children":[]},{"level":3,"title":"Hooks 闭包陷阱","slug":"hooks-闭包陷阱","link":"#hooks-闭包陷阱","children":[]},{"level":3,"title":"React Hook 的使用规范","slug":"react-hook-的使用规范","link":"#react-hook-的使用规范","children":[]},{"level":3,"title":"扩展","slug":"扩展","link":"#扩展","children":[]}]},{"level":2,"title":"CSS","slug":"css","link":"#css","children":[{"level":3,"title":"内联样式条件判断怎么写","slug":"内联样式条件判断怎么写","link":"#内联样式条件判断怎么写","children":[]},{"level":3,"title":"解决 clasName 可能重复的问题","slug":"解决-clasname-可能重复的问题","link":"#解决-clasname-可能重复的问题","children":[]},{"level":3,"title":"CSS-in-JS","slug":"css-in-js","link":"#css-in-js","children":[]},{"level":3,"title":"关于 flex 布局的写法","slug":"关于-flex-布局的写法","link":"#关于-flex-布局的写法","children":[]},{"level":3,"title":"class 类有 横杠 如何写入 className","slug":"class-类有-横杠-如何写入-classname","link":"#class-类有-横杠-如何写入-classname","children":[]},{"level":3,"title":"多个 className","slug":"多个-classname","link":"#多个-classname","children":[]},{"level":3,"title":"一些特殊属性","slug":"一些特殊属性","link":"#一些特殊属性","children":[]}]},{"level":2,"title":"路由","slug":"路由","link":"#路由","children":[{"level":3,"title":"路由跳转的三种方式","slug":"路由跳转的三种方式","link":"#路由跳转的三种方式","children":[]},{"level":3,"title":"获取参数","slug":"获取参数","link":"#获取参数","children":[]},{"level":3,"title":"React-Router的三种形式","slug":"react-router的三种形式","link":"#react-router的三种形式","children":[]}]},{"level":2,"title":"Mock","slug":"mock","link":"#mock","children":[{"level":3,"title":"主要功能","slug":"主要功能","link":"#主要功能","children":[]},{"level":3,"title":"应用场景","slug":"应用场景","link":"#应用场景","children":[]}]},{"level":2,"title":"跨域","slug":"跨域","link":"#跨域","children":[{"level":3,"title":"具体使用方法","slug":"具体使用方法","link":"#具体使用方法","children":[]}]},{"level":2,"title":"Restful API","slug":"restful-api","link":"#restful-api","children":[{"level":3,"title":"设计规范","slug":"设计规范","link":"#设计规范","children":[]},{"level":3,"title":"用户功能","slug":"用户功能","link":"#用户功能","children":[]},{"level":3,"title":"问卷功能","slug":"问卷功能","link":"#问卷功能","children":[]}]},{"level":2,"title":"JWT","slug":"jwt","link":"#jwt","children":[{"level":3,"title":"简叙","slug":"简叙","link":"#简叙","children":[]}]},{"level":2,"title":"DOM 操作","slug":"dom-操作","link":"#dom-操作","children":[{"level":3,"title":"场景","slug":"场景","link":"#场景","children":[]},{"level":3,"title":"实现","slug":"实现","link":"#实现","children":[]}]},{"level":2,"title":"createPortal","slug":"createportal","link":"#createportal","children":[{"level":3,"title":"功能","slug":"功能","link":"#功能","children":[]},{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]}]},{"level":2,"title":"Context","slug":"context","link":"#context","children":[{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]},{"level":2,"title":"Zustand","slug":"zustand","link":"#zustand","children":[{"level":3,"title":"如何使用","slug":"如何使用","link":"#如何使用","children":[]},{"level":3,"title":"持久化","slug":"持久化","link":"#持久化","children":[]}]},{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[{"level":3,"title":"1. VDOM、Fiber、Diff","slug":"_1-vdom、fiber、diff","link":"#_1-vdom、fiber、diff","children":[]},{"level":3,"title":"2. 单向数据流、双向数据绑定、响应式更新的区别","slug":"_2-单向数据流、双向数据绑定、响应式更新的区别","link":"#_2-单向数据流、双向数据绑定、响应式更新的区别","children":[]}]},{"level":2,"title":"错误处理","slug":"错误处理","link":"#错误处理","children":[{"level":3,"title":"使用 try ... catch 块","slug":"使用-try-catch-块","link":"#使用-try-catch-块","children":[]},{"level":3,"title":"使用错误边界组件包裹函数组件","slug":"使用错误边界组件包裹函数组件","link":"#使用错误边界组件包裹函数组件","children":[]},{"level":3,"title":"使用全局错误处理机制","slug":"使用全局错误处理机制","link":"#使用全局错误处理机制","children":[]},{"level":3,"title":"react-error-boundary","slug":"react-error-boundary","link":"#react-error-boundary","children":[]}]},{"level":2,"title":"安全","slug":"安全","link":"#安全","children":[{"level":3,"title":"如何防范 XSS 攻击（跨站脚本攻击）","slug":"如何防范-xss-攻击-跨站脚本攻击","link":"#如何防范-xss-攻击-跨站脚本攻击","children":[]}]}],"git":{"createdTime":1740046010000,"updatedTime":1740046010000,"contributors":[{"name":"linzeqin","email":"1351123861@qq.com","commits":1}]},"readingTime":{"minutes":40.65,"words":12195},"filePathRelative":"前端面试题/2025前端最新面试题/2025前端最新面试题-框架篇react.md","localizedDate":"2025年2月20日","excerpt":"<h1> 2025前端最新面试题-框架篇react</h1>\\n<p>[扩展]</p>\\n<p><a href=\\"https://www.yuque.com/fechaichai/qeamqf/xbai87#e3638cf5-2\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">React基础</a></p>\\n<h2> 环境配置</h2>\\n<h3> 创建项目</h3>\\n<p><code>Create-React-App</code> 创建, 官网推荐, 比较稳定</p>\\n<ol>\\n<li>安装</li>\\n</ol>\\n<p>如果不加 <code>--template typescript</code> 项目会默认使用 <code>javascript</code></p>","autoDesc":true}');export{l as data};
