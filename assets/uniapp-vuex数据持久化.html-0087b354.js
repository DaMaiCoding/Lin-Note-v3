import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e}from"./app-deeca2ec.js";const t={},p=e(`<h1 id="uniapp-vuex数据持久化" tabindex="-1"><a class="header-anchor" href="#uniapp-vuex数据持久化" aria-hidden="true">#</a> uniapp-vuex数据持久化</h1><h2 id="场景" tabindex="-1"><a class="header-anchor" href="#场景" aria-hidden="true">#</a> 场景</h2><p>uniapp 中 微信小程序 vuex 数据持久化</p><p>vuex 只是 状态管理，重新刷新页面后，所有数据都会丢失</p><p>当需要保持登录态，就需要保持数据</p><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><p>安装 <code>vuex-persistedstate</code>、<code>mp-storage</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> vuex-persistedstate
<span class="token function">npm</span> <span class="token function">install</span> mp-storage
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>[注意]</strong></p><p><code>vuex-persistedstate</code>本质还是使用 localStorage、sessionStorage 做数据持久化</p><p><code>mp-storage</code>主要是 因为小程序无法直接使用 原生的 localStorage、sessionStorage, 需要使用下面的 Storage 垫片</p><h2 id="实现" tabindex="-1"><a class="header-anchor" href="#实现" aria-hidden="true">#</a> 实现</h2><ol><li>全部持久化</li></ol><p>store 文件夹中创建 index.js 用于持久化所有 vuex 中的数据</p><p>modules 为 vuex 中 store 分割成的模块</p><p>修改 storage 改变 存储模式</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">&quot;vuex&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> modules <span class="token keyword">from</span> <span class="token string">&quot;./modules/index.js&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//数据持久化插件 (因为小程序无法直接使用 原生的 localStorage、sessionStorage, 需要使用下面的 Storage 垫片)</span>
<span class="token keyword">import</span> createPersistedState <span class="token keyword">from</span> <span class="token string">&quot;vuex-persistedstate&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// 小程序 Storage 垫片，用于在各个小程序平台实现 localStorage、sessionStorage</span>
<span class="token comment">// 使用之前需要先引用此垫片，非全局变量</span>
<span class="token comment">// 直接给 storage 对象上增加新属性的方式不太稳定，推荐使用 setItem 方式</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> localStorage<span class="token punctuation">,</span> sessionStorage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;mp-storage&quot;</span><span class="token punctuation">;</span>

Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  modules<span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// 直接持久化所有, 后期需要初始化单独数据再修改</span>
    <span class="token function">createPersistedState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// storage: localStorage, // 使用 localStorage 进行存储</span>
      <span class="token literal-property property">storage</span><span class="token operator">:</span> sessionStorage <span class="token comment">// 使用 sessionStorage 进行存储</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>部分持久化</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 引入依赖  </span>
<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>  
<span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span>  
<span class="token keyword">import</span> createPersistedState <span class="token keyword">from</span> <span class="token string">&#39;vuex-persistedstate&#39;</span>  

Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span>  

<span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span>  
  <span class="token literal-property property">favorites</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  
  <span class="token literal-property property">username</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>  
  <span class="token literal-property property">demoxxxx</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>  
<span class="token punctuation">}</span>  

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  
  state<span class="token punctuation">,</span>  
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>  
    <span class="token comment">// 可以有多个持久化实例  </span>
    <span class="token function">createPersistedState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;app_config_data&#39;</span><span class="token punctuation">,</span>  <span class="token comment">// 状态保存到本地的 key   </span>
      <span class="token literal-property property">paths</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;favorites&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;username&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment">// 要持久化的状态，在state里面取，如果有嵌套，可以  a.b.c   </span>
      <span class="token literal-property property">storage</span><span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token comment">// 存储方式定义  </span>
        <span class="token function-variable function">getItem</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> uni<span class="token punctuation">.</span><span class="token function">getStorageSync</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 获取  </span>
        <span class="token function-variable function">setItem</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> uni<span class="token punctuation">.</span><span class="token function">setStorageSync</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 存储  </span>
        <span class="token function-variable function">removeItem</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> uni<span class="token punctuation">.</span><span class="token function">removeStorageSync</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token comment">// 删除  </span>
      <span class="token punctuation">}</span>  
    <span class="token punctuation">}</span><span class="token punctuation">)</span>  
  <span class="token punctuation">]</span>  
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),o=[p];function c(i,l){return s(),a("div",null,o)}const d=n(t,[["render",c],["__file","uniapp-vuex数据持久化.html.vue"]]);export{d as default};
