const s=JSON.parse('{"key":"v-243bbfe3","path":"/%E7%BB%8F%E9%AA%8C%E5%AE%9E%E8%B7%B5/ts%E5%A6%82%E4%BD%95%E5%BC%95%E5%85%A5js.html","title":"ts如何引入js文件","lang":"zh-CN","frontmatter":{"description":"ts如何引入js文件 背景 网上有很多关于这方面的解决方案，都是有问题的，都是说要建立 .d.ts 文件配置下就好了，但是基本上都不能解决问题 解决办法 试了很久，发现只需要在 tsconfig.json 文件中加入 “allowJs”: true 即可 // tsconfig.json { \\"compilerOptions\\": { \\"module\\": \\"commonjs\\", \\"declaration\\": true, \\"removeComments\\": true, \\"emitDecoratorMetadata\\": true, \\"experimentalDecorators\\": true, \\"allowSyntheticDefaultImports\\": true, \\"target\\": \\"es2017\\", \\"sourceMap\\": true, \\"outDir\\": \\"./dist\\", \\"baseUrl\\": \\"./\\", \\"incremental\\": true, \\"skipLibCheck\\": true, \\"strictNullChecks\\": false, \\"noImplicitAny\\": false, \\"strictBindCallApply\\": false, \\"forceConsistentCasingInFileNames\\": false, \\"noFallthroughCasesInSwitch\\": false, \\"allowJs\\": true // 允许编译js文件 } }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/Lin-Note-v3/%E7%BB%8F%E9%AA%8C%E5%AE%9E%E8%B7%B5/ts%E5%A6%82%E4%BD%95%E5%BC%95%E5%85%A5js.html"}],["meta",{"property":"og:site_name","content":"Lin-Note"}],["meta",{"property":"og:title","content":"ts如何引入js文件"}],["meta",{"property":"og:description","content":"ts如何引入js文件 背景 网上有很多关于这方面的解决方案，都是有问题的，都是说要建立 .d.ts 文件配置下就好了，但是基本上都不能解决问题 解决办法 试了很久，发现只需要在 tsconfig.json 文件中加入 “allowJs”: true 即可 // tsconfig.json { \\"compilerOptions\\": { \\"module\\": \\"commonjs\\", \\"declaration\\": true, \\"removeComments\\": true, \\"emitDecoratorMetadata\\": true, \\"experimentalDecorators\\": true, \\"allowSyntheticDefaultImports\\": true, \\"target\\": \\"es2017\\", \\"sourceMap\\": true, \\"outDir\\": \\"./dist\\", \\"baseUrl\\": \\"./\\", \\"incremental\\": true, \\"skipLibCheck\\": true, \\"strictNullChecks\\": false, \\"noImplicitAny\\": false, \\"strictBindCallApply\\": false, \\"forceConsistentCasingInFileNames\\": false, \\"noFallthroughCasesInSwitch\\": false, \\"allowJs\\": true // 允许编译js文件 } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-21T16:39:25.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-21T16:39:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ts如何引入js文件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-21T16:39:25.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"解决办法","slug":"解决办法","link":"#解决办法","children":[]}],"git":{"createdTime":1713717565000,"updatedTime":1713717565000,"contributors":[{"name":"Jack_Lin","email":"1351123861@qq.com","commits":1}]},"readingTime":{"minutes":0.7,"words":211},"filePathRelative":"经验实践/ts如何引入js.md","localizedDate":"2024年4月21日","excerpt":"<h1> ts如何引入js文件</h1>\\n<h2> 背景</h2>\\n<p>网上有很多关于这方面的解决方案，都是有问题的，都是说要建立 <code>.d.ts</code> 文件配置下就好了，但是基本上都不能解决问题</p>\\n<h2> 解决办法</h2>\\n<p>试了很久，发现只需要在 <code>tsconfig.json</code> 文件中加入 <code>“allowJs”: true</code> 即可</p>\\n<div class=\\"language-json line-numbers-mode\\" data-ext=\\"json\\"><pre class=\\"language-json\\"><code><span class=\\"token comment\\">// tsconfig.json</span>\\n<span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token property\\">\\"compilerOptions\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token property\\">\\"module\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"commonjs\\"</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token property\\">\\"declaration\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token property\\">\\"removeComments\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token property\\">\\"emitDecoratorMetadata\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token property\\">\\"experimentalDecorators\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token property\\">\\"allowSyntheticDefaultImports\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token property\\">\\"target\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"es2017\\"</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token property\\">\\"sourceMap\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token property\\">\\"outDir\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"./dist\\"</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token property\\">\\"baseUrl\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"./\\"</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token property\\">\\"incremental\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token property\\">\\"skipLibCheck\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token property\\">\\"strictNullChecks\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token property\\">\\"noImplicitAny\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token property\\">\\"strictBindCallApply\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token property\\">\\"forceConsistentCasingInFileNames\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token property\\">\\"noFallthroughCasesInSwitch\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token property\\">\\"allowJs\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span> <span class=\\"token comment\\">// 允许编译js文件</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{s as data};
