const n=JSON.parse(`{"key":"v-0843fffb","path":"/%E7%BB%8F%E9%AA%8C%E5%AE%9E%E8%B7%B5/%E5%89%8D%E7%AB%AF%E6%96%87%E4%BB%B6%E6%B5%81%E4%B8%8B%E8%BD%BD%E5%AE%9E%E7%8E%B0.html","title":"前端文件流下载实现","lang":"zh-CN","frontmatter":{"description":"前端文件流下载实现 场景 后端传过来一个文件流，前端要如何进行下载保存呢 实现 定义一个全局下载函数 // 下载文件的方法 downLoad: function (data, type, filename) { // 创建blob对象，解析流数据 const blob = new Blob([data], { // 设置返回的文件类型 // type: 'application/pdf;charset=UTF-8' 表示下载文档为pdf，如果是word则设置为msword，excel为excel type: type, }); // 这里就是创建一个a标签，等下用来模拟点击事件 const a = document.createElement(\\"a\\"); // 兼容webkix浏览器，处理webkit浏览器中href自动添加blob前缀，默认在浏览器打开而不是下载 const URL = window.URL || window.webkitURL; // 根据解析后的blob对象创建URL 对象 const herf = URL.createObjectURL(blob); // 下载链接 a.href = herf; // 下载文件名,如果后端没有返回，可以自己写a.download = '文件.pdf' a.download = filename; document.body.appendChild(a); // 点击a标签，进行下载 a.click(); // 收尾工作，在内存中移除URL 对象 document.body.removeChild(a); window.URL.revokeObjectURL(herf); },","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/DaMaiCoding-Note/%E7%BB%8F%E9%AA%8C%E5%AE%9E%E8%B7%B5/%E5%89%8D%E7%AB%AF%E6%96%87%E4%BB%B6%E6%B5%81%E4%B8%8B%E8%BD%BD%E5%AE%9E%E7%8E%B0.html"}],["meta",{"property":"og:site_name","content":"DaMaiCoding-Note"}],["meta",{"property":"og:title","content":"前端文件流下载实现"}],["meta",{"property":"og:description","content":"前端文件流下载实现 场景 后端传过来一个文件流，前端要如何进行下载保存呢 实现 定义一个全局下载函数 // 下载文件的方法 downLoad: function (data, type, filename) { // 创建blob对象，解析流数据 const blob = new Blob([data], { // 设置返回的文件类型 // type: 'application/pdf;charset=UTF-8' 表示下载文档为pdf，如果是word则设置为msword，excel为excel type: type, }); // 这里就是创建一个a标签，等下用来模拟点击事件 const a = document.createElement(\\"a\\"); // 兼容webkix浏览器，处理webkit浏览器中href自动添加blob前缀，默认在浏览器打开而不是下载 const URL = window.URL || window.webkitURL; // 根据解析后的blob对象创建URL 对象 const herf = URL.createObjectURL(blob); // 下载链接 a.href = herf; // 下载文件名,如果后端没有返回，可以自己写a.download = '文件.pdf' a.download = filename; document.body.appendChild(a); // 点击a标签，进行下载 a.click(); // 收尾工作，在内存中移除URL 对象 document.body.removeChild(a); window.URL.revokeObjectURL(herf); },"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/DaMaiCoding-Note/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-21T16:39:25.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"前端文件流下载实现"}],["meta",{"property":"article:modified_time","content":"2024-04-21T16:39:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"前端文件流下载实现\\",\\"image\\":[\\"https://mister-hope.github.io/DaMaiCoding-Note/\\"],\\"dateModified\\":\\"2024-04-21T16:39:25.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"场景","slug":"场景","link":"#场景","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1687101610000,"updatedTime":1713717565000,"contributors":[{"name":"Jack_Lin","email":"1351123861@qq.com","commits":2}]},"readingTime":{"minutes":1.54,"words":463},"filePathRelative":"经验实践/前端文件流下载实现.md","localizedDate":"2023年6月18日","excerpt":"<h1> 前端文件流下载实现</h1>\\n<h2> 场景</h2>\\n<p>后端传过来一个文件流，前端要如何进行下载保存呢</p>\\n<h2> 实现</h2>\\n<p>定义一个全局下载函数</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// 下载文件的方法</span>\\n<span class=\\"token function-variable function\\">downLoad</span><span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">data<span class=\\"token punctuation\\">,</span> type<span class=\\"token punctuation\\">,</span> filename</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n     <span class=\\"token comment\\">// 创建blob对象，解析流数据</span>\\n     <span class=\\"token keyword\\">const</span> blob <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Blob</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span>data<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span>\\n       <span class=\\"token comment\\">// 设置返回的文件类型</span>\\n       <span class=\\"token comment\\">// type: 'application/pdf;charset=UTF-8' 表示下载文档为pdf，如果是word则设置为msword，excel为excel</span>\\n       <span class=\\"token literal-property property\\">type</span><span class=\\"token operator\\">:</span> type<span class=\\"token punctuation\\">,</span>\\n     <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n     <span class=\\"token comment\\">// 这里就是创建一个a标签，等下用来模拟点击事件</span>\\n     <span class=\\"token keyword\\">const</span> a <span class=\\"token operator\\">=</span> document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">createElement</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"a\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n     <span class=\\"token comment\\">// 兼容webkix浏览器，处理webkit浏览器中href自动添加blob前缀，默认在浏览器打开而不是下载</span>\\n     <span class=\\"token keyword\\">const</span> <span class=\\"token constant\\">URL</span> <span class=\\"token operator\\">=</span> window<span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">URL</span> <span class=\\"token operator\\">||</span> window<span class=\\"token punctuation\\">.</span>webkitURL<span class=\\"token punctuation\\">;</span>\\n     <span class=\\"token comment\\">// 根据解析后的blob对象创建URL 对象</span>\\n     <span class=\\"token keyword\\">const</span> herf <span class=\\"token operator\\">=</span> <span class=\\"token constant\\">URL</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">createObjectURL</span><span class=\\"token punctuation\\">(</span>blob<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n     <span class=\\"token comment\\">// 下载链接</span>\\n     a<span class=\\"token punctuation\\">.</span>href <span class=\\"token operator\\">=</span> herf<span class=\\"token punctuation\\">;</span>\\n     <span class=\\"token comment\\">// 下载文件名,如果后端没有返回，可以自己写a.download = '文件.pdf'</span>\\n     a<span class=\\"token punctuation\\">.</span>download <span class=\\"token operator\\">=</span> filename<span class=\\"token punctuation\\">;</span>\\n     document<span class=\\"token punctuation\\">.</span>body<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">appendChild</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n     <span class=\\"token comment\\">// 点击a标签，进行下载</span>\\n     a<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">click</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n     <span class=\\"token comment\\">// 收尾工作，在内存中移除URL 对象</span>\\n     document<span class=\\"token punctuation\\">.</span>body<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">removeChild</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n     window<span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">URL</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">revokeObjectURL</span><span class=\\"token punctuation\\">(</span>herf<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
