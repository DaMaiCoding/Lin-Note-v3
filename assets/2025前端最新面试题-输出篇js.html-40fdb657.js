const n=JSON.parse(`{"key":"v-e00c38c6","path":"/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/2025%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98/2025%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98-%E8%BE%93%E5%87%BA%E7%AF%87js.html","title":"2025前端最新面试题-输出篇js","lang":"zh-CN","frontmatter":{"description":"2025前端最新面试题-输出篇js 数组、对象、字符串输出 [10, 20, 30].map(parseInt) 返回结果是什么？ 要点 map 的参数和返回值 parseInt 参数和返回值 const res = [10, 20, 30].map(parseInt) console.log(res) // 拆解 [10, 20, 30].map((num, index) =&gt; { return parseInt(num, index) }) // 类似于 执行 // parseInt(10, 0) parseInt(20, 1) parseInt(30, 2) // 执行结果 [10, NaN, NaN] // 解析十进制字符串 const num1 = Number.parseInt('123'); console.log(num1); // 输出: 123 // 解析十六进制字符串 const num2 = Number.parseInt('0xFF', 16); console.log(num2); // 输出: 255 // 解析八进制字符串 const num3 = Number.parseInt('077', 8); console.log(num3); // 输出: 63","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/DaMaiCoding-Note/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/2025%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98/2025%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98-%E8%BE%93%E5%87%BA%E7%AF%87js.html"}],["meta",{"property":"og:site_name","content":"DaMaiCoding-Note"}],["meta",{"property":"og:title","content":"2025前端最新面试题-输出篇js"}],["meta",{"property":"og:description","content":"2025前端最新面试题-输出篇js 数组、对象、字符串输出 [10, 20, 30].map(parseInt) 返回结果是什么？ 要点 map 的参数和返回值 parseInt 参数和返回值 const res = [10, 20, 30].map(parseInt) console.log(res) // 拆解 [10, 20, 30].map((num, index) =&gt; { return parseInt(num, index) }) // 类似于 执行 // parseInt(10, 0) parseInt(20, 1) parseInt(30, 2) // 执行结果 [10, NaN, NaN] // 解析十进制字符串 const num1 = Number.parseInt('123'); console.log(num1); // 输出: 123 // 解析十六进制字符串 const num2 = Number.parseInt('0xFF', 16); console.log(num2); // 输出: 255 // 解析八进制字符串 const num3 = Number.parseInt('077', 8); console.log(num3); // 输出: 63"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-20T10:06:50.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-20T10:06:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2025前端最新面试题-输出篇js\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-20T10:06:50.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"数组、对象、字符串输出","slug":"数组、对象、字符串输出","link":"#数组、对象、字符串输出","children":[{"level":3,"title":"[10, 20, 30].map(parseInt) 返回结果是什么？","slug":"_10-20-30-map-parseint-返回结果是什么","link":"#_10-20-30-map-parseint-返回结果是什么","children":[]}]},{"level":2,"title":"promise","slug":"promise","link":"#promise","children":[]},{"level":2,"title":"作用域与闭包","slug":"作用域与闭包","link":"#作用域与闭包","children":[{"level":3,"title":"作用域","slug":"作用域","link":"#作用域","children":[]},{"level":3,"title":"闭包","slug":"闭包","link":"#闭包","children":[]}]}],"git":{"createdTime":1740046010000,"updatedTime":1740046010000,"contributors":[{"name":"linzeqin","email":"1351123861@qq.com","commits":1}]},"readingTime":{"minutes":1.48,"words":443},"filePathRelative":"前端面试题/2025前端最新面试题/2025前端最新面试题-输出篇js.md","localizedDate":"2025年2月20日","excerpt":"<h1> 2025前端最新面试题-输出篇js</h1>\\n<h2> 数组、对象、字符串输出</h2>\\n<h3> [10, 20, 30].map(parseInt) 返回结果是什么？</h3>\\n<p><strong>要点</strong></p>\\n<ul>\\n<li>map 的参数和返回值</li>\\n<li>parseInt 参数和返回值</li>\\n</ul>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> res <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">20</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">30</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">map</span><span class=\\"token punctuation\\">(</span>parseInt<span class=\\"token punctuation\\">)</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>res<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// 拆解</span>\\n<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">20</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">30</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">num<span class=\\"token punctuation\\">,</span> index</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">parseInt</span><span class=\\"token punctuation\\">(</span>num<span class=\\"token punctuation\\">,</span> index<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span> \\n<span class=\\"token comment\\">// 类似于 执行</span>\\n<span class=\\"token comment\\">// parseInt(10, 0) parseInt(20, 1) parseInt(30, 2)</span>\\n<span class=\\"token comment\\">// 执行结果  [10, NaN, NaN]</span>\\n\\n<span class=\\"token comment\\">// 解析十进制字符串</span>\\n<span class=\\"token keyword\\">const</span> num1 <span class=\\"token operator\\">=</span> Number<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">parseInt</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'123'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>num1<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 输出: 123</span>\\n\\n<span class=\\"token comment\\">// 解析十六进制字符串</span>\\n<span class=\\"token keyword\\">const</span> num2 <span class=\\"token operator\\">=</span> Number<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">parseInt</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'0xFF'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">16</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>num2<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 输出: 255</span>\\n\\n<span class=\\"token comment\\">// 解析八进制字符串</span>\\n<span class=\\"token keyword\\">const</span> num3 <span class=\\"token operator\\">=</span> Number<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">parseInt</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'077'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">8</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>num3<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 输出: 63</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
