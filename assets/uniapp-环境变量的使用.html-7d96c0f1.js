import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,e}from"./app-bc035641.js";const t="/Lin-Note-v3/assets/1683534992541-ada95b7e-5000-4607-a7f6-c4fe058c5036-4caa447d.png",o="/Lin-Note-v3/assets/1683535320295-c2f9cee9-86ce-4390-afba-1ed122e06166-f13b6c13.png",i="/Lin-Note-v3/assets/1683535392946-e54d733c-c6c1-4bdf-b275-9b1a05853df6-a19db0dd.png",p="/Lin-Note-v3/assets/1683535646301-0c43489d-c1d1-4794-8464-97818f693201-b6321290.png",c={},r=e(`<h1 id="uniapp-环境变量的使用" tabindex="-1"><a class="header-anchor" href="#uniapp-环境变量的使用" aria-hidden="true">#</a> uniapp-环境变量的使用</h1><h2 id="场景" tabindex="-1"><a class="header-anchor" href="#场景" aria-hidden="true">#</a> 场景</h2><p>在开发过程中，我们需要与后端联调，那么开发环境的 API 的地址就会与生产环境的 <strong>基地址</strong> 有所不同，我们每次开发和部署都去修改的话，就显得麻烦了</p><p>那有没有什么办法，让我们不需要没错都去修改呢，我们可以采用环境变量的方式，根据环境变量的不同，从而判断当前是处于哪个环境下，从而自动改变 <strong>API 基地址</strong></p><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2><ol><li>先在建立一个文件 tool，并在文件夹中增加 添加一个存放工具函数的 base.js 文件，用于设置 <strong>API 基地址</strong></li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 判断是否是生产环境</span>
<span class="token keyword">function</span> <span class="token function">isDevEnv</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;development&#39;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 网络请求地址 </span>
<span class="token keyword">export</span> <span class="token keyword">const</span> baseUrl <span class="token operator">=</span> <span class="token function">isDevEnv</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> 
<span class="token string-property property">&#39;http://192.168.0.1&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;https://www.baodu.com&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 <code>p<wbr>rocess.env.NODE_ENV</code>有两个值，<code>development</code>、<code>production</code></p><ol start="2"><li>uniapp 点击发布 到 微信小程序</li></ol><figure><img src="`+t+'" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><p>打包发布后，我们就能在 微信开发者工具中就可以看到, 我们代码的 <strong>API基地址</strong> 已经改变了</p><figure><img src="'+o+'" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><ol start="3"><li>如果需要生产环境的 <strong>API基地址</strong>，需要使用 发行，才能获取到 属于生产环境的环境变量</li></ol><figure><img src="'+i+'" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><p><strong>[注意]</strong></p><p>发布可能需要刷新 uniapp 的应用标示，如果发布时有错误</p><p>可以尝试在 <code>manifest.json</code>中重新获取下 应用标示</p><figure><img src="'+p+'" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure>',18),l=[r];function d(g,u){return a(),s("div",null,l)}const v=n(c,[["render",d],["__file","uniapp-环境变量的使用.html.vue"]]);export{v as default};
