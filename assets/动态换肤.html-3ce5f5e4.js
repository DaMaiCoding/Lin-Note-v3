import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-fd3cbc51.js";const p={},e=t(`<h1 id="动态换肤" tabindex="-1"><a class="header-anchor" href="#动态换肤" aria-hidden="true">#</a> 动态换肤</h1><h2 id="动态换肤-实现原理" tabindex="-1"><a class="header-anchor" href="#动态换肤-实现原理" aria-hidden="true">#</a> 动态换肤 实现原理</h2><ol><li>动态换肤的关键是修改 <code>css变量</code> 的值</li><li>换肤需要同时兼顾 <ul><li><code>element-plus</code></li><li>非 <code>element-plus</code></li></ul></li></ol><h2 id="动态换肤-实现方案" tabindex="-1"><a class="header-anchor" href="#动态换肤-实现方案" aria-hidden="true">#</a> 动态换肤 实现方案</h2><ol><li>创建一个组件 <code>ThemeSelect</code> 用来处理修改之后的 css变量 的值</li><li>根据新值修改 <code>element-plus</code> 主题色</li><li>根据新值修改非 <code>element-plus</code> 主题色</li></ol><h2 id="修改-element-plus-的实现原理" tabindex="-1"><a class="header-anchor" href="#修改-element-plus-的实现原理" aria-hidden="true">#</a> 修改 element-plus 的实现原理</h2><ol><li>获取当前 <code>element-plus</code> 的所有样式</li><li>定义我们要替换之后的样式</li><li>在原样式中，利用正则替换新样式</li><li>把替换后的样式写入到 <code>style</code> 标签中</li></ol><h3 id="替换文件" tabindex="-1"><a class="header-anchor" href="#替换文件" aria-hidden="true">#</a> 替换文件</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// constants/formula.json</span>
<span class="token punctuation">{</span>
  <span class="token string-property property">&quot;shade-1&quot;</span><span class="token operator">:</span> <span class="token string">&quot;color(primary shade(10%))&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;light-1&quot;</span><span class="token operator">:</span> <span class="token string">&quot;color(primary tint(10%))&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;light-2&quot;</span><span class="token operator">:</span> <span class="token string">&quot;color(primary tint(20%))&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;light-3&quot;</span><span class="token operator">:</span> <span class="token string">&quot;color(primary tint(30%))&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;light-4&quot;</span><span class="token operator">:</span> <span class="token string">&quot;color(primary tint(40%))&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;light-5&quot;</span><span class="token operator">:</span> <span class="token string">&quot;color(primary tint(50%))&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;light-6&quot;</span><span class="token operator">:</span> <span class="token string">&quot;color(primary tint(60%))&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;light-7&quot;</span><span class="token operator">:</span> <span class="token string">&quot;color(primary tint(70%))&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;light-8&quot;</span><span class="token operator">:</span> <span class="token string">&quot;color(primary tint(80%))&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;light-9&quot;</span><span class="token operator">:</span> <span class="token string">&quot;color(primary tint(90%))&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;subMenuHover&quot;</span><span class="token operator">:</span> <span class="token string">&quot;color(primary tint(70%))&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;subMenuBg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;color(primary tint(80%))&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;menuHover&quot;</span><span class="token operator">:</span> <span class="token string">&quot;color(primary tint(90%))&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;menuBg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;color(primary)&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="替换功能文件" tabindex="-1"><a class="header-anchor" href="#替换功能文件" aria-hidden="true">#</a> 替换功能文件</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// src/utils/theme.js</span>
<span class="token keyword">import</span> formula <span class="token keyword">from</span> <span class="token string">&quot;@/constants/formula.json&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> color <span class="token keyword">from</span> <span class="token string">&quot;css-color-function&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> rgbHex <span class="token keyword">from</span> <span class="token string">&quot;rgb-hex&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&quot;axios&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> config <span class="token keyword">from</span> <span class="token string">&quot;element-plus/package.json&quot;</span><span class="token punctuation">;</span>

<span class="token comment">/* 把生成的样式表写入到 style 中 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">writeNewStyle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">newStyle</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> style <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;style&#39;</span><span class="token punctuation">)</span>
  style<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> newStyle
  document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">/* 根据主题色，生成最新的样式表 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">generateNewStyle</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">parimaryColor</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1. 根据主色生成色值表</span>
  <span class="token keyword">const</span> colors <span class="token operator">=</span> <span class="token function">generateColors</span><span class="token punctuation">(</span>parimaryColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 2. 获取当前 element-plus 的默认样式表，并且把需要进行替换的色值打上标记</span>
  <span class="token keyword">let</span> cssText <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getOriginalStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 3. 遍历生成的色值表，在 默认样式表 进行全局替换</span>
  Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>colors<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    cssText <span class="token operator">=</span> cssText<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;(:|\\\\s+)&#39;</span> <span class="token operator">+</span> key<span class="token punctuation">,</span> <span class="token string">&#39;g&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;$1&#39;</span> <span class="token operator">+</span> colors<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> cssText
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">generateColors</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">primary</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>primary<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> colors <span class="token operator">=</span> <span class="token punctuation">{</span>
    primary<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>formula<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> formula<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">primary</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> primary<span class="token punctuation">)</span><span class="token punctuation">;</span>
    colors<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;#&quot;</span> <span class="token operator">+</span> <span class="token function">rgbHex</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> colors<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">/* 获取当前 element-plus 的默认样式表 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getOriginalStyle</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> version <span class="token operator">=</span> config<span class="token punctuation">.</span>version<span class="token punctuation">;</span>
  <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://unpkg.com/element-plus@</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>version<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/dist/index.css</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">axios</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">getStyleTemplate</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">/* 并且把需要进行替换的色值打上标记 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">getStyleTemplate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> colorMap <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;#3a8ee6&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shade-1&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;#409eff&quot;</span><span class="token operator">:</span> <span class="token string">&quot;primary&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;#53a8ff&quot;</span><span class="token operator">:</span> <span class="token string">&quot;light-1&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;#66b1ff&quot;</span><span class="token operator">:</span> <span class="token string">&quot;light-2&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;#79bbff&quot;</span><span class="token operator">:</span> <span class="token string">&quot;light-3&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;#8cc5ff&quot;</span><span class="token operator">:</span> <span class="token string">&quot;light-4&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;#aocfff&quot;</span><span class="token operator">:</span> <span class="token string">&quot;light-5&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;#b3d8ff&quot;</span><span class="token operator">:</span> <span class="token string">&quot;light-6&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;#c6e2ff&quot;</span><span class="token operator">:</span> <span class="token string">&quot;light-7&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;#d9ecff&quot;</span><span class="token operator">:</span> <span class="token string">&quot;light-8&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;#ecf5ff&quot;</span><span class="token operator">:</span> <span class="token string">&quot;light-9&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>colorMap<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> colorMap<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    data <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token string">&#39;ig&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> data
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="调用文件" tabindex="-1"><a class="header-anchor" href="#调用文件" aria-hidden="true">#</a> 调用文件</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token comment">&lt;!--
@description: i18n 国际化演示
@link: view/home.vue
--&gt;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-row</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span><span class="token punctuation">&gt;</span></span>Default<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Primary<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>success<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Success<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Info<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>warning<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Warning<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>danger<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Danger<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-row</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>ts<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token comment">/* ------------------------ 导入 与 引用 ----------------------------------- */</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> generateNewStyle<span class="token punctuation">,</span> writeNewStyle <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/theme&#39;</span>
<span class="token comment">/* ------------------------ 变量 与 数据 ----------------------------------- */</span>
<span class="token comment">/* ------------------------ 函数 与 方法 ----------------------------------- */</span>
<span class="token comment">// 切换样式的方法</span>
<span class="token keyword">const</span>  <span class="token function-variable function">handleColor</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> newStyle <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">generateNewStyle</span><span class="token punctuation">(</span><span class="token string">&#39;#232323&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 颜色值可随意替换</span>
  <span class="token function">writeNewStyle</span><span class="token punctuation">(</span>newStyle<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">/* ------------------------- 生命周期 -------------------------------------- */</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="样式持久化" tabindex="-1"><a class="header-anchor" href="#样式持久化" aria-hidden="true">#</a> 样式持久化</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token comment">&lt;!--
@description: 样式持久化
@link: APP.vue
--&gt;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RouterView</span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> useStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> generateNewStyle<span class="token punctuation">,</span> writeNewStyle <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/theme&#39;</span>

<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">generateNewStyle</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>mainColor<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">newStyle</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">writeNewStyle</span><span class="token punctuation">(</span>newStyle<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="最新的方式" tabindex="-1"><a class="header-anchor" href="#最新的方式" aria-hidden="true">#</a> 最新的方式</h2><p>如果您的项目也使用了 <code>SCSS</code>，可以直接修改 <code>Element Plus</code> 的样式变量。 新建一个样式文件，例如 <code>styles/element/index.scss</code>，</p><p>采用 <code>scss</code> 文件覆盖</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token comment">// styles/element/index.scss</span>
<span class="token comment">/* 只需要重写你需要的即可 */</span>
<span class="token keyword">@forward</span> <span class="token string">&#39;element-plus/theme-chalk/src/common/var.scss&#39;</span> <span class="token module-modifier keyword">with</span> <span class="token punctuation">(</span>
  <span class="token property"><span class="token variable">$colors</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
    <span class="token string">&#39;primary&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
      <span class="token string">&#39;base&#39;</span><span class="token punctuation">:</span> green<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 如果只是按需导入，则可以忽略以下内容。</span>
<span class="token comment">// 如果你想导入所有样式:</span>
<span class="token comment">// @use &quot;element-plus/theme-chalk/src/index.scss&quot; as *;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在你的项目入口文件中，导入这个样式文件以替换 <code>Element Plus</code> 内置的 CSS</p><h2 id="自定义主题-变更实现" tabindex="-1"><a class="header-anchor" href="#自定义主题-变更实现" aria-hidden="true">#</a> 自定义主题 变更实现</h2><p>核心原理：修改 <code>scss</code> 变量来进行实现主题色变化</p><h3 id="css-变量的使用" tabindex="-1"><a class="header-anchor" href="#css-变量的使用" aria-hidden="true">#</a> CSS 变量的使用</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* css 变量的定义 */</span>
<span class="token selector">:root</span> <span class="token punctuation">{</span>
    <span class="token property">--color</span><span class="token punctuation">:</span> #808080
<span class="token punctuation">}</span>
<span class="token comment">/* 使用 css 变量 */</span>
<span class="token selector">div</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--color<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token selector">.someClass:hover</span> <span class="token punctuation">{</span>
    <span class="token property">backgroud</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--color<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="改变主题色" tabindex="-1"><a class="header-anchor" href="#改变主题色" aria-hidden="true">#</a> 改变主题色</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* css 定义主题色 */</span>
<span class="token selector">:root</span> <span class="token punctuation">{</span>
    <span class="token property">--main</span><span class="token punctuation">:</span> #808080
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// js 动态修改 主题颜色</span>
document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&#39;--main&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#808080&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="换肤" tabindex="-1"><a class="header-anchor" href="#换肤" aria-hidden="true">#</a> 换肤</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">:root</span> <span class="token punctuation">{</span>
    <span class="token property">--background</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
    <span class="token property">--font-color</span><span class="token punctuation">:</span> #303133<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">[data-theme=&quot;dark&quot;]</span> <span class="token punctuation">{</span>
    <span class="token property">--background</span><span class="token punctuation">:</span> #383838<span class="token punctuation">;</span>
    <span class="token property">--font-color</span><span class="token punctuation">:</span> #eeeeee<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;data-theme&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dark&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,31),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","动态换肤.html.vue"]]);export{k as default};
