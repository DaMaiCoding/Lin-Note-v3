import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as l,a as n,b as s,d as t,e}from"./app-fd3cbc51.js";const c="/Lin-Note-v3/assets/image-20210830134004706.f4a99b49-bce22668.png",r="/Lin-Note-v3/assets/6_2.39c8c442-7231b077.png",u="/Lin-Note-v3/assets/image-20210830135731466.7d34db68-566dbe58.png",d="/Lin-Note-v3/assets/image-20210830140428900.83fd5ad0-993abb36.png",k="/Lin-Note-v3/assets/image-20210830140522534.b857eaea-f45de70d.png",m="/Lin-Note-v3/assets/image-20210830140648414.f3ff8b55-e2fbfc93.png",v="/Lin-Note-v3/assets/image-20210830140722039.310b80f5-60d0089e.png",h="/Lin-Note-v3/assets/image-20210830141415349.46683708-78ffd415.png",g="/Lin-Note-v3/assets/image-20210830141622200.32b8bdce-5357b9d3.png",b="/Lin-Note-v3/assets/image-20210830173043224.358bbadb-9c0e8cb2.png",_={},f=e('<h1 id="支付专题" tabindex="-1"><a class="header-anchor" href="#支付专题" aria-hidden="true">#</a> 支付专题</h1><p>支付作为工作中最常见的一个核心业务场景，前端同学其实需要做的东西有限，基本的流程、逻辑与难点都是在服务端。为了让前端同学，也能自己后续开发支付功能（Node.js），在本篇介绍了详细的从企业主体 -&gt; 支付必要条件 -&gt;微信小程序支付完整的闭环。</p><p>支付业务支撑：</p><ul><li>商城应用</li><li>金融产品</li><li>充值应用（会员、点券）</li><li>...</li></ul><p>支付应用场景：</p><ul><li>H5支付 -&gt; 扫码、跳转App</li><li>小程序</li><li>移动App</li></ul><p>支付的技术难点：</p><ul><li>多平台（微信、支付宝、银联）</li><li>安全性（HTTPS、全流程日志、交易备案、数据安全性如灾备...）</li></ul><p>常见的问题：</p><ul><li>支付的开发流程，是不是前端不用管？只用调接口——是的，举例：小程序前端，其实上只是wx.requestPayment调起支付即可；</li><li>支付功能的开通容易吗？——容易，但是针对于个人，无法开通微信支付；个人能开通吗？——不行，但是可以使用第三方服务，比如JSAPI；</li><li>服务端对接常见的支付功能的流程是怎样的？——基本步骤如下： <ol><li>申请微信小程序账号</li><li>微信小程序认证</li><li>申请商户平台账号</li><li>信小程序关联商户号</li><li>接入微信支付</li></ol></li></ul>',10),y={id:"企业注册与税务",tabindex:"-1"},E=n("a",{class:"header-anchor",href:"#企业注册与税务","aria-hidden":"true"},"#",-1),A={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E4%BC%81%E4%B8%9A%E6%B3%A8%E5%86%8C%E4%B8%8E%E7%A8%8E%E5%8A%A1",target:"_blank",rel:"noopener noreferrer"},w=e("<p>开办企业需要注意：</p><ul><li><p>财税问题，如果零报税，则需要企业年报每年需要申报。</p><p>开办企业不是玩，一定要负责任。而且，不良的企业负债，可能会影响到个人的征信，最终无法贷款、乘车等。</p></li><li><p>股份问题：如果多人开办，千万不要对半</p><p>多人入股不能均分，不能0资金入股，分股用期权；</p><p>设计退股机制，分红机制，以及债务问题解决办法；</p><p>股权主要的目的是激励；</p></li><li><p>利益分配问题：天下熙熙皆为利来，天下攘攘皆为利往；</p></li></ul><p>无论是支付宝还是微信，能够支持的支付主体只有企业、个体工商户和政府及事业单位等，共同点是<strong>非个人</strong>。</p><blockquote><p>个人开发者，如果需要接入支付功能，也可以选择第三方服务商：</p><ul><li>PayJS：开通费用300+手续费0.38%+服务费2%</li><li>PaysApi：月付手续费30-199+单笔费率从0.3~0.1%不等</li><li>PayBob：开通费用300+手续费0.38%+服务费1-2%</li><li>xorpay：月付手续费0-60+手续费0.38%+单笔手续费1.2%~0.5%不等</li></ul></blockquote><p>了解企业的注册流程及税务相关的知识，有助于学习支付相关的内容，扩展知识面。</p><p>企业注册比较麻烦的地方：</p><ul><li>设立登记可能要跑几躺</li><li>税务登记 + 银行开户 折腾个10几天</li><li>报税：有季报+年报（工商年报次年6月前、汇缴清算不定）</li></ul><p>但是，开办企业也是有好处的，举例：</p><ul><li>作为团队出去接项目</li><li>大多数网上的服务针对的是企业</li><li>国家政府对于小微企业现在有大力的扶持</li></ul>",9),x={id:"注册企业流程",tabindex:"-1"},B=n("a",{class:"header-anchor",href:"#注册企业流程","aria-hidden":"true"},"#",-1),q={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E6%B3%A8%E5%86%8C%E4%BC%81%E4%B8%9A%E6%B5%81%E7%A8%8B",target:"_blank",rel:"noopener noreferrer"},S=n("p",null,"企业注册流程中，需要注意的点：",-1),j=n("p",null,"准备工作（场地、人员、名称）",-1),F=n("p",null,"公司查名各地有各地的查询网址或者在工商管理部门办事大厅进行现场查重（因为可能会重名，所以需要多准备几个）",-1),P={href:"http://scjg.hubei.gov.cn/ICPSP/newNamecheck/nameCheck.action",target:"_blank",rel:"noopener noreferrer"},I={href:"https://jyfwyun.com/",target:"_blank",rel:"noopener noreferrer"},T=n("li",null,[n("p",null,"提交资料（章程、住所证明）"),n("p",null,"可以在当地的区（县）政务中心领取材料 或者在其网站上下载对应的模板文件，自行打印与复印。")],-1),C=n("li",null,[n("p",null,"办理税务+银行开户"),n("p",null,"当办理完企业登记，并核发营业执照之后，可以输税务与企业银行开户。"),n("p",null,"各家银行的开户费用大体相同，只是服务可能不一样，大家可以选择几家对比一下。推荐：招商与中兴。"),n("p",null,"选择银行需要注意："),n("ul",null,[n("li",null,"服务问题；"),n("li",null,"便利性——不要选择一家离自己办公点或者家很远的地方；")])],-1),D={id:"个人工商户与企业区别",tabindex:"-1"},N=n("a",{class:"header-anchor",href:"#个人工商户与企业区别","aria-hidden":"true"},"#",-1),U={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E4%B8%AA%E4%BA%BA%E5%B7%A5%E5%95%86%E6%88%B7%E4%B8%8E%E4%BC%81%E4%B8%9A%E5%8C%BA%E5%88%AB",target:"_blank",rel:"noopener noreferrer"},H=e("<p>共同点：</p><ul><li>流程：个体要记账、交税、年检、审批，也会被抽查</li><li>税费：与小微企业无异</li></ul><p>不同点：</p><ul><li>债务：个体负责到底-无限，公司申请破产保护-有限责任</li><li>规模：个体8人不能上市，公司可以设立分机构、上市</li><li>业务：个体不能做进出口业务</li><li>经营 ：个体限制经营范围</li><li>税费：税种不一样，征收方式不一样</li></ul>",4),R={id:"自己注册vs代注册",tabindex:"-1"},L=n("a",{class:"header-anchor",href:"#自己注册vs代注册","aria-hidden":"true"},"#",-1),z={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E8%87%AA%E5%B7%B1%E6%B3%A8%E5%86%8Cvs%E4%BB%A3%E6%B3%A8%E5%86%8C",target:"_blank",rel:"noopener noreferrer"},M=e("<p><strong>自己注册：</strong></p><p>优点：</p><ul><li>没有费用</li></ul><p>缺点：</p><ul><li>需要花时间</li><li>需要了解整体流程</li><li>需要去税务、银行</li></ul><p><strong>代注册：</strong></p><p>优点：</p><ul><li>省时间</li><li>省事（办证、税务、企业银行、注册地、资料准备一条龙）</li></ul><p>缺点：</p><ul><li>费用不等，从3000-6000，甚至更多；</li><li>后续可能会有代账、年租费用等；</li><li>开票&amp;办税也会收费；</li></ul>",10),J={id:"报税-开票",tabindex:"-1"},$=n("a",{class:"header-anchor",href:"#报税-开票","aria-hidden":"true"},"#",-1),Y={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E6%8A%A5%E7%A8%8E-%E5%BC%80%E7%A5%A8",target:"_blank",rel:"noopener noreferrer"},G=e("<p>大多数企业会找一个代账会计或者找一个代账公司，而企业前期是无需会计的，完全可以零报税，操作流程非常的简单。</p><p>如果不清楚报税的流程，可以在税务机关处进行现场报税。</p><p>代账费用：从200元到300元/月不等。</p><p>找了代账的企业需要会看如下的几个表格，了解概念：</p><ul><li>利润表：你赚了多少钱！</li><li>资产负债表：有没有欠你的钱、你欠的钱，余下的钱</li></ul><p>除了找代账公司以外，Brain更推荐自己在前期进行记账与报税，流程不复杂，而且软件非常的智能，只用填入自己的收入与支出，财务软件可以自动形成报表。</p><p>财务软件推荐：</p><ul><li>金碟</li><li>用友</li></ul><p>云平台推荐：</p><ul><li>柠檬云</li></ul><blockquote><p>季度+年度报税：3个月报季报，照着软件填</p></blockquote>",11),V={id:"企业日常的开销",tabindex:"-1"},O=n("a",{class:"header-anchor",href:"#企业日常的开销","aria-hidden":"true"},"#",-1),Z={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E4%BC%81%E4%B8%9A%E6%97%A5%E5%B8%B8%E7%9A%84%E5%BC%80%E9%94%80",target:"_blank",rel:"noopener noreferrer"},X=n("p",null,"主要分为如下几类：",-1),W=n("ul",null,[n("li",null,"资产：办公设备如打印机、办公桌椅、空调等"),n("li",null,"费用：租赁场地、水+电+网"),n("li",null,"费用：人员（会计、开发、产品等）"),n("li",null,"...")],-1),K=n("p",null,"从上面的分类来看，注册企业没有什么费用，反而是维持一个企业的运转是需要大量费用的。大家在准备企业开办之前，需要有一定的准备。",-1),Q=n("blockquote",null,[n("p",null,"不打没有准备的仗，也不要什么都准备好了，才开始！！")],-1),nn={id:"支付前置必要条件",tabindex:"-1"},sn=n("a",{class:"header-anchor",href:"#支付前置必要条件","aria-hidden":"true"},"#",-1),an={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E6%94%AF%E4%BB%98%E5%89%8D%E7%BD%AE%E5%BF%85%E8%A6%81%E6%9D%A1%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"},tn=e("<p>下面以微信支付为例，来介绍，开发支付功能需要准备的前置条件：</p><ul><li>选择合适的主体&amp;场景（企业服务号）微信（支付宝）认证；</li><li>域名+公网IP+HTTPS；</li><li>云服务器ICP备案；</li></ul><p>微信支付：</p><ul><li>主体问题：订阅号非媒体号无法支付，推荐企业服务号；</li><li>小程序：必须HTTPS + ICP备案；</li><li>开通商户号，也需要企业主体，与公众号&amp;小程序同一主体；</li></ul><p>支付宝支付：</p>",5),en=n("li",null,[n("p",null,"主体问题：企业主体；")],-1),pn={href:"https://opendocs.alipay.com/iot/multi-platform/material",target:"_blank",rel:"noopener noreferrer"},on=n("p",null,"而且对于实体店铺审核要严格一些。",-1),ln=n("figure",null,[n("img",{src:c,alt:"image-20210830134004706",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20210830134004706")],-1),cn=n("p",null,"说明：",-1),rn={href:"https://beian.aliyun.com/",target:"_blank",rel:"noopener noreferrer"},un={href:"https://cloud.tencent.com/product/ba",target:"_blank",rel:"noopener noreferrer"},dn=n("li",null,"HTTPS：必须要有域名，必须要有一台云服务器；",-1),kn={href:"https://pay.weixin.qq.com/",target:"_blank",rel:"noopener noreferrer"},mn={id:"小程序支付流程",tabindex:"-1"},vn=n("a",{class:"header-anchor",href:"#小程序支付流程","aria-hidden":"true"},"#",-1),hn={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%94%AF%E4%BB%98%E6%B5%81%E7%A8%8B",target:"_blank",rel:"noopener noreferrer"},gn={id:"开发技巧",tabindex:"-1"},bn=n("a",{class:"header-anchor",href:"#开发技巧","aria-hidden":"true"},"#",-1),_n={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7",target:"_blank",rel:"noopener noreferrer"},fn=n("li",null,"技术问题，先读文档，查找官方的社区；",-1),yn={href:"https://www.npmjs.com/package/wechatpay-axios-plugin",target:"_blank",rel:"noopener noreferrer"},En=n("li",null,"问stackoverflow、知乎、csdn等；",-1),An=n("li",null,"最后，才考虑自己开发轮子；",-1),wn=n("p",null,"如果是学习，也可以从0到1的开发，了解整个支付的流程。",-1),xn={id:"流程图",tabindex:"-1"},Bn=n("a",{class:"header-anchor",href:"#流程图","aria-hidden":"true"},"#",-1),qn={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E6%B5%81%E7%A8%8B%E5%9B%BE",target:"_blank",rel:"noopener noreferrer"},Sn=n("p",null,"学会看时序图：",-1),jn=n("ul",null,[n("li",null,"最上面的是角色"),n("li",null,"从左往右看，按照箭头的方向走"),n("li",null,"从上往下看，是时间关系流程的流转")],-1),Fn=n("figure",null,[n("img",{src:r,alt:"img",tabindex:"0",loading:"lazy"}),n("figcaption",null,"img")],-1),Pn=n("p",null,"重点步骤说明：",-1),In={href:"https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_5_1.shtml",target:"_blank",rel:"noopener noreferrer"},Tn={href:"https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_5_4.shtml",target:"_blank",rel:"noopener noreferrer"},Cn={href:"https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_5_5.shtml",target:"_blank",rel:"noopener noreferrer"},Dn={href:"https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_5_2.shtml",target:"_blank",rel:"noopener noreferrer"},Nn={id:"搭建开发环境",tabindex:"-1"},Un=n("a",{class:"header-anchor",href:"#搭建开发环境","aria-hidden":"true"},"#",-1),Hn={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E6%90%AD%E5%BB%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83",target:"_blank",rel:"noopener noreferrer"},Rn={id:"支付准备",tabindex:"-1"},Ln=n("a",{class:"header-anchor",href:"#支付准备","aria-hidden":"true"},"#",-1),zn={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E6%94%AF%E4%BB%98%E5%87%86%E5%A4%87",target:"_blank",rel:"noopener noreferrer"},Mn=n("figure",null,[n("img",{src:u,alt:"image-20210830135731466",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20210830135731466")],-1),Jn={href:"https://pay.weixin.qq.com/wiki/doc/apiv3/open/pay/chapter2_8_1.shtml",target:"_blank",rel:"noopener noreferrer"},$n={id:"配置https-域名解析",tabindex:"-1"},Yn=n("a",{class:"header-anchor",href:"#配置https-域名解析","aria-hidden":"true"},"#",-1),Gn={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E9%85%8D%E7%BD%AEhttps-%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90",target:"_blank",rel:"noopener noreferrer"},Vn=n("p",null,"说明：",-1),On={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/07-%E5%AE%89%E5%85%A8%E5%9F%9F%E5%90%8D%E7%9B%B8%E5%85%B3.html#ssl%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7",target:"_blank",rel:"noopener noreferrer"},Zn=n("li",null,[n("p",null,"域名解析以阿里云为例："),n("figure",null,[n("img",{src:d,alt:"image-20210830140428900",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20210830140428900")])],-1),Xn={id:"配置api密钥",tabindex:"-1"},Wn=n("a",{class:"header-anchor",href:"#配置api密钥","aria-hidden":"true"},"#",-1),Kn={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E9%85%8D%E7%BD%AEapi%E5%AF%86%E9%92%A5",target:"_blank",rel:"noopener noreferrer"},Qn={href:"https://pay.weixin.qq.com/",target:"_blank",rel:"noopener noreferrer"},ns=n("figure",null,[n("img",{src:k,alt:"image-20210830140522534",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20210830140522534")],-1),ss={id:"配置frp内网穿透",tabindex:"-1"},as=n("a",{class:"header-anchor",href:"#配置frp内网穿透","aria-hidden":"true"},"#",-1),ts={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E9%85%8D%E7%BD%AEfrp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F",target:"_blank",rel:"noopener noreferrer"},es=n("p",null,"为了方便测试微信支付通知，有两种方案：",-1),ps=n("ul",null,[n("li",null,[n("p",null,"上传API服务到测试服务器："),n("figure",null,[n("img",{src:m,alt:"image-20210830140648414",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20210830140648414")])]),n("li",null,[n("p",null,"使用本地的API服务，需要使用frp工具把远程的通知转发到本地："),n("figure",null,[n("img",{src:v,alt:"image-20210830140722039",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20210830140722039")])])],-1),os=n("p",null,"配置过程如下：",-1),is={href:"https://github.com/fatedier/frp/releases",target:"_blank",rel:"noopener noreferrer"},ls=e(`<li><p>SSH到远程服务端，新建配置文件<code>/home/frp/frps.ini</code>：</p><div class="language-nginx line-numbers-mode" data-ext="nginx"><pre class="language-nginx"><code>[common]
bind_port = 10010
vhost_https_port = 443
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在服务器上运行frps，使用docker镜像：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker run --restart=always --network host -d -v /home/frp/frps.ini:/etc/frp/frps.ini --name frps snowdreamtech/frps
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>下载let&#39;s encrypt创建的SSL证书 -&gt; 一般在acme生成的目录中-&gt;放置到本地解压的frp目录中；</p><figure><img src="`+h+`" alt="image-20210830141415349" tabindex="0" loading="lazy"><figcaption>image-20210830141415349</figcaption></figure></li><li><p>在本地创建<code>frpc.ini</code>文件</p><div class="language-nginx line-numbers-mode" data-ext="nginx"><pre class="language-nginx"><code>[common]
<span class="token directive"><span class="token keyword">server_addr</span> = 121.36.194.226
server_port = <span class="token number">10010</span>

[test_htts2http]
type = https
custom_domains = test1.toimc.com

plugin = https2http
plugin_local_addr = 127.0.0.1:3000

<span class="token comment"># HTTPS 证书相关的配置</span>
plugin_crt_path = ./fullchain.pem
plugin_key_path = ./key.pem
plugin_host_header_rewrite = 127.0.0.1
plugin_header_X-From-Where = frp</span>
<span class="token punctuation">;</span> <span class="token directive"><span class="token keyword">test1.toimc.com</span> -&gt; vhost_https_port <span class="token number">443</span></span>
<span class="token punctuation">;</span> test1.toimc.com:443 -&gt; frp -&gt; 127.0.0.1:3000
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>使用frpc运行该配置文件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>chmod +x frpc
./frpc -c ./frpc.ini
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>运行成功的提示：</p><figure><img src="`+g+'" alt="image-20210830141622200" tabindex="0" loading="lazy"><figcaption>image-20210830141622200</figcaption></figure></li>',5),cs={href:"https://gofrp.org/",target:"_blank",rel:"noopener noreferrer"},rs={href:"https://gofrp.org/docs/faq/",target:"_blank",rel:"noopener noreferrer"},us={href:"https://github.com/fatedier/frp/issues",target:"_blank",rel:"noopener noreferrer"},ds={id:"apiv3-vs-apiv2",tabindex:"-1"},ks=n("a",{class:"header-anchor",href:"#apiv3-vs-apiv2","aria-hidden":"true"},"#",-1),ms={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#apiv3-vs-apiv2",target:"_blank",rel:"noopener noreferrer"},vs=n("p",null,"为了在 保证支付 安全的前提下，带给商户 简单、一致且易用的开发体验，我们推出了全新的微信支付API v3。",-1),hs=n("p",null,"相较于之前的微信支付API，主要区别是：",-1),gs=n("ul",null,[n("li",null,"遵循统一的REST 的设计风格"),n("li",null,"使用JSON作为数据交互的格式，不再使用XML"),n("li",null,"使用基于非对称密钥的SHA256-RSA的数字签名算法，不再使用MD5或HMAC-SHA256"),n("li",null,"不再要求HTTPS客户端证书"),n("li",null,"使用AES-256-GCM，对回调中的关键信息进行加密保护")],-1),bs={href:"https://pay.weixin.qq.com/wiki/doc/apiv3/wechatpay/wechatpay-1.shtml",target:"_blank",rel:"noopener noreferrer"},_s=e("<p>两个接口的对接图：</p><table><thead><tr><th><strong>V3</strong></th><th><strong>规则差异</strong></th><th><strong>V2</strong></th></tr></thead><tbody><tr><td>JSON</td><td>参数格式</td><td>XML</td></tr><tr><td>POST、GET 或 DELETE</td><td>提交方式</td><td>POST</td></tr><tr><td>AES-256-GCM加密</td><td>回调加密</td><td>无需加密</td></tr><tr><td>RSA 加密</td><td>敏感加密</td><td>无需加密</td></tr><tr><td>UTF-8</td><td>编码方式</td><td>UTF-8</td></tr><tr><td>非对称密钥SHA256-RSA</td><td>签名方式</td><td>MD5 或 HMAC-SHA256</td></tr></tbody></table><p><strong>推荐：在没有接触v2的情况下，直接上手v3；如果有老旧业务，也可以对接到v3，或者不动原有的业务，直至v2的证书快过期，需要更换时，再切换到v3。</strong></p>",3),fs={id:"jsapi统一下单",tabindex:"-1"},ys=n("a",{class:"header-anchor",href:"#jsapi统一下单","aria-hidden":"true"},"#",-1),Es={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#jsapi%E7%BB%9F%E4%B8%80%E4%B8%8B%E5%8D%95",target:"_blank",rel:"noopener noreferrer"},As={id:"签名生成",tabindex:"-1"},ws=n("a",{class:"header-anchor",href:"#签名生成","aria-hidden":"true"},"#",-1),xs={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E7%AD%BE%E5%90%8D%E7%94%9F%E6%88%90",target:"_blank",rel:"noopener noreferrer"},Bs={href:"https://pay.weixin.qq.com/wiki/doc/apiv3/wechatpay/wechatpay4_0.shtml",target:"_blank",rel:"noopener noreferrer"},qs=e(`<p>商户可以按照下述步骤生成请求的签名，微信支付API v3 要求商户对请求进行签名，微信支付会在收到请求后进行签名的验证。</p><p><strong>如果签名验证不通过，微信支付API v3将会拒绝处理请求，并返回<code>401 Unauthorized</code>。</strong></p><p>签名生成的步骤有：</p><ul><li><p>构造签名串</p><p>签名串一共有五行，每一行为一个参数。行尾以 <code>\\n</code>（换行符，ASCII编码值为0x0A）结束，包括最后一行。如果参数本身以<code>\\n</code>结束，也需要附加一个<code>\\n</code>。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">HTTP</span>请求方法\\n
<span class="token constant">URL</span>\\n
请求时间戳\\n
请求随机串\\n
请求报文主体\\n 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>计算签名值</p><p>使用商户私钥对待签名串进行SHA256 with RSA签名，并对签名结果进行Base64编码得到签名值，示例：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">echo</span> <span class="token parameter variable">-n</span> <span class="token parameter variable">-e</span> <span class="token punctuation">\\</span>
<span class="token string">&quot;GET<span class="token entity" title="\\n">\\n</span>/v3/certificates<span class="token entity" title="\\n">\\n</span>1554208460<span class="token entity" title="\\n">\\n</span>593BEC0C930BF1AFEB40B4A08C8FB242<span class="token entity" title="\\n">\\n</span><span class="token entity" title="\\n">\\n</span>&quot;</span> <span class="token punctuation">\\</span>
  <span class="token operator">|</span> openssl dgst <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-sign</span> apiclient_key.pem <span class="token punctuation">\\</span>
  <span class="token operator">|</span> openssl base64 <span class="token parameter variable">-A</span>
  uOVRnA4qG/MNnYzdQxJanN+zU+lTgIcnU9BxGw5dKjK+VdEUz2FeIoC+D5sB/LN+nGzX3hfZg6r5wT1pl2ZobmIc6p0ldN7J6yDgUzbX8Uk3sD4a4eZVPTBvqNDoUqcYMlZ9uuDdCvNv4TM3c1WzsXUrExwVkI1XO5jCNbgDJ25nkT/c1gIFvqoogl7MdSFGc4W4xZsqCItnqbypR3RuGIlR9h9vlRsy7zJR9PBI83X8alLDIfR1ukt1P7tMnmogZ0cuDY8cZsd8ZlCgLadmvej58SLsIkVxFJ8XyUgx9FmutKSYTmYtWBZ0+tNvfGmbXU7cob8H/4nLBiCwIUFluw<span class="token operator">==</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>第一步比较好实现：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// HTTP请求方法\\n</span>
<span class="token comment">// URL\\n  https://www.imooc.com/path1/path2/?query1=value</span>
<span class="token comment">// 请求时间戳\\n</span>
<span class="token comment">// 请求随机串\\n</span>
<span class="token comment">// 请求报文主体\\n</span>
<span class="token keyword">const</span> tmpUrl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
<span class="token keyword">const</span> nonceStr <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> pathname <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">http</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token operator">?</span> tmpUrl<span class="token punctuation">.</span>pathname <span class="token operator">:</span> url
<span class="token keyword">const</span> timestamp <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> message <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>method<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>pathname <span class="token operator">+</span> tmpUrl<span class="token punctuation">.</span>search
  <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>timestamp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>nonceStr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>body <span class="token operator">?</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token template-punctuation string">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第二步的RSA的算法实现思路：</p><ul><li>找一下微信社区有没有类似实现</li><li>找一下网上有没有类似实现</li><li>找一下有没有npm开源包</li><li>找一下stackoverflow或者百度</li><li>...</li></ul><p>如果 以上都没有，那么就要自己造轮子了。但是这样的场景少之有少，哈哈，还轮不上大家自己上。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">rsaSign</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> keyPem <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>
    path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;keys/apiclient_key.pem&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string">&#39;utf-8&#39;</span>
  <span class="token punctuation">)</span>
  <span class="token keyword">const</span> signature <span class="token operator">=</span> crypto
    <span class="token punctuation">.</span><span class="token function">createSign</span><span class="token punctuation">(</span><span class="token string">&#39;RSA-SHA256&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span>keyPem<span class="token punctuation">,</span> <span class="token string">&#39;base64&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> signature
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后使用上面合成的message进行签名即可：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> signature <span class="token operator">=</span> <span class="token function">rsaSign</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>如何验证呢？</strong></p><p>方案一：</p><p>Linux或者mac直接使用openssl来进行验证</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>echo -n -e \\
&quot;GET\\n/v3/certificates\\n1554208460\\n593BEC0C930BF1AFEB40B4A08C8FB242\\n\\n&quot; \\
  | openssl dgst -sha256 -sign apiclient_key.pem \\
  | openssl base64 -A
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方案二：</p><p>使用老师给大家准备的docker镜像进行验证<code>lw96/libressl</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 1.创建容器</span>
<span class="token function">docker</span> run <span class="token parameter variable">-itd</span> <span class="token parameter variable">--name</span> ssl lw96/libressl

<span class="token comment"># 2.拷贝证书</span>
<span class="token function">docker</span> <span class="token function">cp</span> 证书目录 容器id:/tmp

<span class="token comment"># 3.进入容器</span>
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> ssl <span class="token function">sh</span>

<span class="token comment"># 4.使用上面的一样的命令</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-n</span> <span class="token parameter variable">-e</span> <span class="token punctuation">\\</span>
<span class="token string">&quot;GET<span class="token entity" title="\\n">\\n</span>/v3/certificates<span class="token entity" title="\\n">\\n</span>1554208460<span class="token entity" title="\\n">\\n</span>593BEC0C930BF1AFEB40B4A08C8FB242<span class="token entity" title="\\n">\\n</span><span class="token entity" title="\\n">\\n</span>&quot;</span> <span class="token punctuation">\\</span>
  <span class="token operator">|</span> openssl dgst <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-sign</span> /tmp/apiclient_key.pem <span class="token punctuation">\\</span>
  <span class="token operator">|</span> openssl base64 <span class="token parameter variable">-A</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),Ss={id:"authentication头部密钥串",tabindex:"-1"},js=n("a",{class:"header-anchor",href:"#authentication头部密钥串","aria-hidden":"true"},"#",-1),Fs={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#authentication%E5%A4%B4%E9%83%A8%E5%AF%86%E9%92%A5%E4%B8%B2",target:"_blank",rel:"noopener noreferrer"},Ps=e(`<p>微信支付商户API v3要求请求通过<code>HTTP Authorization</code>头来传递签名。<code>Authorization</code>由<em>认证类型</em>和<em>签名信息</em>两个部分组成。</p><p>下面我们使用命令行演示如何生成签名。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Authorization: 认证类型 签名信息
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>具体组成为：</p><p>1.认证类型，目前为WECHATPAY2-SHA256-RSA2048</p><p>2.签名信息</p>`,6),Is=n("li",null,[s("发起请求的商户（包括直连商户、服务商或渠道商）的商户号"),n("code",null,"mchid")],-1),Ts={href:"https://pay.weixin.qq.com/wiki/doc/apiv3/wechatpay/wechatpay3_1.shtml",target:"_blank",rel:"noopener noreferrer"},Cs=n("code",null,"serial_no",-1),Ds={href:"https://pay.weixin.qq.com/wiki/doc/apiv3/wechatpay/wechatpay3_1.shtml#part-3",target:"_blank",rel:"noopener noreferrer"},Ns=n("li",null,[s("请求随机串"),n("code",null,"nonce_str")],-1),Us=n("li",null,[s("时间戳"),n("code",null,"timestamp")],-1),Hs=n("li",null,[s("签名值"),n("code",null,"signature")],-1),Rs=n("li",null,"注：以上五项签名信息，无顺序要求。",-1),Ls=e(`<p><code>Authorization</code> 头的示例如下：（注意，示例因为排版可能存在换行，实际数据应在一行）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Authorization: WECHATPAY2-SHA256-RSA2048 <span class="token assign-left variable">mchid</span><span class="token operator">=</span><span class="token string">&quot;1900009191&quot;</span>,nonce_str<span class="token operator">=</span>&quot;593BEC0C930B
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最终我们可以组一个包含了签名的HTTP请求了。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">curl</span> https://api.mch.weixin.qq.com/v3/certificates <span class="token parameter variable">-H</span> <span class="token string">&#39;Authorization: WECHATPAY2-SHA256-RSA2048 mchid=&quot;1900009191&quot;,nonce_str=&quot;593BEC0C930BF1AFEB40B4A08C8FB242&quot;,signature=&quot;uOVRnA4qG/MNnYzdQxJanN+zU+lTgIcnU9BxGw5dKjK+VdEUz2FeIoC+D5sB/LN+nGzX3hfZg6r5wT1pl2ZobmIc6p0ldN7J6yDgUzbX8Uk3sD4a4eZVPTBvqNDoUqcYMlZ9uuDdCvNv4TM3c1WzsXUrExwVkI1XO5jCNbgDJ25nkT/c1gIFvqoogl7MdSFGc4W4xZsqCItnqbypR3RuGIlR9h9vlRsy7zJR9PBI83X8alLDIfR1ukt1P7tMnmogZ0cuDY8cZsd8ZlCgLadmvej58SLsIkVxFJ8XyUgx9FmutKSYTmYtWBZ0+tNvfGmbXU7cob8H/4nLBiCwIUFluw==&quot;,timestamp=&quot;1554208460&quot;,serial_no=&quot;1DDE55AD98ED71D6EDD4A4A16996DE7B47773A8C&quot;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>代码示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// config.js</span>
<span class="token keyword">const</span> mchid <span class="token operator">=</span> <span class="token string">&#39;xxxxx&#39;</span>

<span class="token keyword">const</span> serialNo <span class="token operator">=</span> <span class="token string">&#39;xxxxx&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  mchid<span class="token punctuation">,</span>
  serialNo
<span class="token punctuation">}</span>

<span class="token comment">// WxPay.js</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getSignHeaders</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> method<span class="token punctuation">,</span> body</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// HTTP请求方法\\n</span>
  <span class="token comment">// URL\\n  https://www.imooc.com/path1/path2/?query1=value</span>
  <span class="token comment">// 请求时间戳\\n</span>
  <span class="token comment">// 请求随机串\\n</span>
  <span class="token comment">// 请求报文主体\\n</span>
  <span class="token keyword">const</span> tmpUrl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
  <span class="token keyword">const</span> nonceStr <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> pathname <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">http</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token operator">?</span> tmpUrl<span class="token punctuation">.</span>pathname <span class="token operator">:</span> url
  <span class="token keyword">const</span> timestamp <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> message <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>method<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>pathname <span class="token operator">+</span> tmpUrl<span class="token punctuation">.</span>search
    <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>timestamp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>nonceStr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>body <span class="token operator">?</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token template-punctuation string">\`</span></span>
  <span class="token comment">// const keyPem = fs.readFileSync(path.join(__dirname, &#39;keys/apiclient_key.pem&#39;), &#39;utf-8&#39;)</span>
  <span class="token comment">// const signature = crypto.createSign(&#39;RSA-SHA256&#39;).update(message, &#39;utf-8&#39;).sign(keyPem, &#39;base64&#39;)</span>
  <span class="token keyword">const</span> signature <span class="token operator">=</span> <span class="token function">rsaSign</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>
  <span class="token comment">// 1.解决问题：windows上无openssl -&gt; lw96/libressl</span>
  <span class="token comment">// 2.需要传递apiclient_key.pem给镜像 -&gt; 因为只有在容器里面才能执行openssl</span>
  <span class="token comment">// 3.method1: docker cp  method2: -v</span>
  <span class="token comment">// 4.使用openssl进行签名 -&gt; 对比crypto产生的base64串</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">WECHATPAY2-SHA256-RSA2048 mchid=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>config<span class="token punctuation">.</span>mchid<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;,nonce_str=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>nonceStr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;,signature=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>signature<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;,timestamp=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>timestamp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;,serial_no=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>config<span class="token punctuation">.</span>serialNo<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&#39;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    nonceStr<span class="token punctuation">,</span>
    timestamp
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),zs={id:"接口说明",tabindex:"-1"},Ms=n("a",{class:"header-anchor",href:"#接口说明","aria-hidden":"true"},"#",-1),Js={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E",target:"_blank",rel:"noopener noreferrer"},$s={href:"https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_5_1.shtml",target:"_blank",rel:"noopener noreferrer"},Ys={href:"https://api.mch.weixin.qq.com/v3/pay/transactions/jsapi",target:"_blank",rel:"noopener noreferrer"},Gs=e(`<p>**请求方式：**POST</p><p>形成随机的商户订单号：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getTradeNo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 服务端侧：out_trade_no -&gt; 订单号 -&gt; timestamp + type + id</span>
  <span class="token comment">// 1.Date.now()  2.Moment/dayjs</span>
  <span class="token comment">// 2. 01-小程序</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token function">dayjs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;YYYYMMDDHHmmssSSS&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    <span class="token string">&#39;01&#39;</span> <span class="token operator">+</span>
    Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最终，统一订单的接口：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">wxJSPAY</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span>
    description<span class="token punctuation">,</span>
    goodsTag<span class="token punctuation">,</span>
    total<span class="token punctuation">,</span>
    <span class="token literal-property property">user</span><span class="token operator">:</span> <span class="token punctuation">{</span> openid <span class="token punctuation">}</span><span class="token punctuation">,</span>
    detail<span class="token punctuation">,</span>
    sceneInfo<span class="token punctuation">,</span>
    settleInfo
  <span class="token punctuation">}</span> <span class="token operator">=</span> params
  <span class="token comment">// https://api.mch.weixin.qq.com/v3/pay/transactions/jsapi</span>
  <span class="token comment">// 小程序用户侧： description，amount:{total} -&gt; token -&gt; id -&gt; openid</span>

  <span class="token comment">// 参数准备</span>
  <span class="token keyword">const</span> wxParams <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">appid</span><span class="token operator">:</span> config<span class="token punctuation">.</span>AppID<span class="token punctuation">,</span>
    <span class="token literal-property property">mchid</span><span class="token operator">:</span> config<span class="token punctuation">.</span>mchid<span class="token punctuation">,</span>
    description<span class="token punctuation">,</span>
    <span class="token literal-property property">out_trade_no</span><span class="token operator">:</span> <span class="token function">getTradeNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">time_expire</span><span class="token operator">:</span> <span class="token function">dayjs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token string">&#39;m&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">attach</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">notify_url</span><span class="token operator">:</span> <span class="token string">&#39;https://test1.toimc.com/public/notify&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">goods_tag</span><span class="token operator">:</span> goodsTag<span class="token punctuation">,</span>
    <span class="token literal-property property">amount</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">total</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">currency</span><span class="token operator">:</span> <span class="token string">&#39;CNY&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">payer</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      openid
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    detail<span class="token punctuation">,</span>
    <span class="token literal-property property">scene_info</span><span class="token operator">:</span> sceneInfo<span class="token punctuation">,</span>
    <span class="token literal-property property">settle_info</span><span class="token operator">:</span> settleInfo
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token string">&#39;https://api.mch.weixin.qq.com/v3/pay/transactions/jsapi&#39;</span>
	<span class="token comment">// 头部签名  </span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> headers<span class="token punctuation">,</span> nonceStr<span class="token punctuation">,</span> timestamp <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">getSignHeaders</span><span class="token punctuation">(</span>
    url<span class="token punctuation">,</span>
    <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
    wxParams
  <span class="token punctuation">)</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> instance<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> wxParams<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">Authorization</span><span class="token operator">:</span> headers
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;🚀 ~ file: WxPay.js ~ line 53 ~ wxJSPAY ~ result&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> status<span class="token punctuation">,</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> result
    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">prepayId</span><span class="token operator">:</span> data<span class="token punctuation">.</span>prepay_id<span class="token punctuation">,</span> nonceStr<span class="token punctuation">,</span> timestamp <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">wxJSPAY error: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>result<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">wxJSPAY error: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>error<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),Vs={id:"用户支付",tabindex:"-1"},Os=n("a",{class:"header-anchor",href:"#用户支付","aria-hidden":"true"},"#",-1),Zs={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E7%94%A8%E6%88%B7%E6%94%AF%E4%BB%98",target:"_blank",rel:"noopener noreferrer"},Xs={id:"支付步骤",tabindex:"-1"},Ws=n("a",{class:"header-anchor",href:"#支付步骤","aria-hidden":"true"},"#",-1),Ks={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E6%94%AF%E4%BB%98%E6%AD%A5%E9%AA%A4",target:"_blank",rel:"noopener noreferrer"},Qs=n("p",null,"前端步骤：",-1),na=n("ul",null,[n("li",null,"用户下单 -> 发起请求，让后端生成支付参数"),n("li",null,"用户支付 -> wx.requestPayment调起支付")],-1),sa=n("p",null,"后端步骤：",-1),aa=n("ul",null,[n("li",null,"使用JSAPI统一下单，产生的prepay_id（预支付id）"),n("li",null,"构造签名串 -> 计算签名"),n("li",null,"返回前端支付参数")],-1),ta={id:"准备支付参数",tabindex:"-1"},ea=n("a",{class:"header-anchor",href:"#准备支付参数","aria-hidden":"true"},"#",-1),pa={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E5%87%86%E5%A4%87%E6%94%AF%E4%BB%98%E5%8F%82%E6%95%B0",target:"_blank",rel:"noopener noreferrer"},oa=e(`<p>第一步：</p><p><strong>造签名串</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>签名串一共有四行，每一行为一个参数。行尾以\\n（换行符，ASCII编码值为0x0A）结束，包括最后一行。
如果参数本身以\\n结束，也需要附加一个\\n
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>参与签名字段及格式：</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>小程序appId
时间戳
随机字符串
订单详情扩展字符串
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第二步：</p><p><strong>计算签名：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token parameter variable">-n</span> <span class="token parameter variable">-e</span> <span class="token punctuation">\\</span>
<span class="token string">&quot;wx8888888888888888<span class="token entity" title="\\n">\\n</span>1414561699<span class="token entity" title="\\n">\\n</span>5K8264ILTKCH16CQ2502SI8ZNMTM67VS<span class="token entity" title="\\n">\\n</span>prepay_id=wx201410272009395522657a690389285100<span class="token entity" title="\\n">\\n</span>&quot;</span> <span class="token punctuation">\\</span>
  <span class="token operator">|</span> openssl dgst <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-sign</span> apiclient_key.pem <span class="token punctuation">\\</span>
  <span class="token operator">|</span> openssl base64 <span class="token parameter variable">-A</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参数：</p>`,9),ia=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"参数名"),n("th",{style:{"text-align":"left"}},"变量"),n("th",{style:{"text-align":"left"}},"类型[长度限制]"),n("th",{style:{"text-align":"left"}},"必填"),n("th",{style:{"text-align":"left"}},"描述")])],-1),la=n("td",{style:{"text-align":"left"}},"时间戳",-1),ca=n("td",{style:{"text-align":"left"}},"timeStamp",-1),ra=n("td",{style:{"text-align":"left"}},"string[1,32]",-1),ua=n("td",{style:{"text-align":"left"}},"是",-1),da={style:{"text-align":"left"}},ka={href:"https://pay.weixin.qq.com/wiki/doc/api/wxpay_v2/jiekouguize/chapter1_2.shtml#part-5",target:"_blank",rel:"noopener noreferrer"},ma=n("tr",null,[n("td",{style:{"text-align":"left"}},"随机字符串"),n("td",{style:{"text-align":"left"}},"nonceStr"),n("td",{style:{"text-align":"left"}},"string[1,32]"),n("td",{style:{"text-align":"left"}},"是"),n("td",{style:{"text-align":"left"}},"随机字符串，不长于32位。 示例值：5K8264ILTKCH16CQ2502SI8ZNMTM67VS")],-1),va=n("tr",null,[n("td",{style:{"text-align":"left"}},"订单详情扩展字符串"),n("td",{style:{"text-align":"left"}},"package"),n("td",{style:{"text-align":"left"}},"string[1,128]"),n("td",{style:{"text-align":"left"}},"是"),n("td",{style:{"text-align":"left"}},"小程序下单接口返回的prepay_id参数值，提交格式如：prepay_id=*** 示例值：prepay_id=wx201410272009395522657a690389285100")],-1),ha=n("tr",null,[n("td",{style:{"text-align":"left"}},"签名方式"),n("td",{style:{"text-align":"left"}},"signType"),n("td",{style:{"text-align":"left"}},"string[1,32]"),n("td",{style:{"text-align":"left"}},"是"),n("td",{style:{"text-align":"left"}},"签名类型，默认为RSA，仅支持RSA。 示例值：RSA")],-1),ga=n("tr",null,[n("td",{style:{"text-align":"left"}},"签名"),n("td",{style:{"text-align":"left"}},"paySign"),n("td",{style:{"text-align":"left"}},"string[1,512]"),n("td",{style:{"text-align":"left"}},"是"),n("td",{style:{"text-align":"left"}},"签名，使用字段appId、timeStamp、nonceStr、package计算得出的签名值 示例值")],-1),ba={id:"后端接口开发",tabindex:"-1"},_a=n("a",{class:"header-anchor",href:"#后端接口开发","aria-hidden":"true"},"#",-1),fa={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E5%90%8E%E7%AB%AF%E6%8E%A5%E5%8F%A3%E5%BC%80%E5%8F%91",target:"_blank",rel:"noopener noreferrer"},ya=e(`<p>创建路由：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 微信用户下单</span>
router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/wxOrder&#39;</span><span class="token punctuation">,</span> userController<span class="token punctuation">.</span>wxOrder<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>创建<code>wxOrder</code>下单方法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token function">wxOrder</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> body <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request
  <span class="token comment">// 为什么订单的total即商品的金额信息不能从前端传？</span>
  <span class="token comment">// 从前端传商品的id -&gt; 在后端查询对应id的商品价格</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> description<span class="token punctuation">,</span> total <span class="token punctuation">}</span> <span class="token operator">=</span> body
  <span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">findByID</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>_id<span class="token punctuation">)</span>
  <span class="token keyword">const</span> params <span class="token operator">=</span> <span class="token punctuation">{</span>
    description<span class="token punctuation">,</span>
    total<span class="token punctuation">,</span>
    user
  <span class="token punctuation">}</span>
  <span class="token comment">// 1. 发起wxPay -&gt; prepay_id</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> prepayId<span class="token punctuation">,</span> nonceStr<span class="token punctuation">,</span> timestamp <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">wxJSPAY</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span>
  <span class="token comment">// 小程序appId</span>
  <span class="token comment">// 时间戳</span>
  <span class="token comment">// 随机字符串</span>
  <span class="token comment">// 订单详情扩展字符串</span>
  <span class="token keyword">const</span> paySign <span class="token operator">=</span> <span class="token function">rsaSign</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>config<span class="token punctuation">.</span>AppID<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>timestamp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>nonceStr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\nprepay_id=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>prepayId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token comment">// 2. 拼接数据返回前端</span>
  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">appId</span><span class="token operator">:</span> config<span class="token punctuation">.</span>AppID<span class="token punctuation">,</span>
      timestamp<span class="token punctuation">,</span>
      nonceStr<span class="token punctuation">,</span>
      <span class="token keyword">package</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">prepay_id=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>prepayId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token literal-property property">signType</span><span class="token operator">:</span> <span class="token string">&#39;RSA&#39;</span><span class="token punctuation">,</span>
      paySign
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),Ea={id:"前端模拟下单-支付",tabindex:"-1"},Aa=n("a",{class:"header-anchor",href:"#前端模拟下单-支付","aria-hidden":"true"},"#",-1),wa={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E5%89%8D%E7%AB%AF%E6%A8%A1%E6%8B%9F%E4%B8%8B%E5%8D%95-%E6%94%AF%E4%BB%98",target:"_blank",rel:"noopener noreferrer"},xa=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token function">order</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$u<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">orderGoods</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;toimc测试商品&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">total</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token comment">// 单位分</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// console.log(&#39;🚀 ~ file: order.vue ~ line 23 ~ order ~ res&#39;, res)</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> code<span class="token punctuation">,</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> res
  <span class="token keyword">if</span> <span class="token punctuation">(</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>orderParams <span class="token operator">=</span> data
    uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;下单成功&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">2000</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token function">pay</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  uni<span class="token punctuation">.</span><span class="token function">requestPayment</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">provider</span><span class="token operator">:</span> <span class="token string">&#39;weixin&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">orderInfo</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;toimc测试商品&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">total</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token comment">// 单位分</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">timeStamp</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>orderParams<span class="token punctuation">.</span>timestamp <span class="token operator">+</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">nonceStr</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>orderParams<span class="token punctuation">.</span>nonceStr<span class="token punctuation">,</span>
    <span class="token keyword">package</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>orderParams<span class="token punctuation">.</span>package<span class="token punctuation">,</span>
    <span class="token literal-property property">signType</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>orderParams<span class="token punctuation">.</span>signType<span class="token punctuation">,</span>
    <span class="token literal-property property">paySign</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>orderParams<span class="token punctuation">.</span>paySign<span class="token punctuation">,</span>
    <span class="token function-variable function">complete</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;🚀 ~ file: order.vue ~ line 47 ~ pay ~ res&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
      <span class="token comment">// errMsg: &quot;requestPayment:ok&quot; -&gt; 支付成功</span>
      <span class="token comment">// errMsg: &quot;requestPayment:fail cancel&quot; -&gt; 取消</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Ba={id:"订单查询",tabindex:"-1"},qa=n("a",{class:"header-anchor",href:"#订单查询","aria-hidden":"true"},"#",-1),Sa={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E8%AE%A2%E5%8D%95%E6%9F%A5%E8%AF%A2",target:"_blank",rel:"noopener noreferrer"},ja=n("p",null,"用户支付成功后，需要接受微信平台的被动通知或者是主动查询订单的支付状态。",-1),Fa=n("p",null,"原因：可能用户支付成功后，微信后台已经给了用户侧反馈，但是由于网络问题，商户平台可能未收到通知。",-1),Pa=n("figure",null,[n("img",{src:b,alt:"image-20210830173043224",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20210830173043224")],-1),Ia={id:"微信主动通知",tabindex:"-1"},Ta=n("a",{class:"header-anchor",href:"#微信主动通知","aria-hidden":"true"},"#",-1),Ca={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E5%BE%AE%E4%BF%A1%E4%B8%BB%E5%8A%A8%E9%80%9A%E7%9F%A5",target:"_blank",rel:"noopener noreferrer"},Da=n("p",null,"frp转发通知，只需要创建对应的接口，然后在JSAPI统一下单的接口中指定回调的域名即可。",-1),Na=n("p",null,"**请求方式：**POST",-1),Ua={href:"https://pay.weixin.qq.com/wxpay/pay.action%E2%80%9D",target:"_blank",rel:"noopener noreferrer"},Ha=n("p",null,[n("strong",null,"通知规则")],-1),Ra=n("p",null,"用户支付完成后，微信会把相关支付结果和用户信息发送给商户，商户需要接收处理该消息，并返回应答。",-1),La=n("p",null,"对后台通知交互时，如果微信收到商户的应答不符合规范或超时，微信认为通知失败，微信会通过一定的策略定期重新发起通知，尽可能提高通知的成功率，但微信不保证通知最终能成功。（通知频率为15s/15s/30s/3m/10m/20m/30m/30m/30m/60m/3h/3h/3h/6h/6h - 总计 24h4m）",-1),za=n("p",null,[n("strong",null,"通知报文")],-1),Ma=n("p",null,"支付结果通知是以POST 方法访问商户设置的通知url，通知的数据以JSON 格式通过请求主体（BODY）传输。通知的数据包括了加密的支付结果详情。",-1),Ja=n("p",null,"下面详细描述对通知数据进行解密的流程：",-1),$a={href:"https://pay.weixin.qq.com/",target:"_blank",rel:"noopener noreferrer"},Ya=n("li",null,"针对resource.algorithm中描述的算法（目前为AEAD_AES_256_GCM），取得对应的参数nonce和associated_data；",-1),Ga=n("li",null,"使用key、nonce和associated_data，对数据密文resource.ciphertext进行解密，得到JSON形式的资源对象；",-1),Va=n("strong",null,"注：",-1),Oa={href:"https://tools.ietf.org/html/rfc5116",target:"_blank",rel:"noopener noreferrer"},Za={id:"主动通知后端接口",tabindex:"-1"},Xa=n("a",{class:"header-anchor",href:"#主动通知后端接口","aria-hidden":"true"},"#",-1),Wa={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E4%B8%BB%E5%8A%A8%E9%80%9A%E7%9F%A5%E5%90%8E%E7%AB%AF%E6%8E%A5%E5%8F%A3",target:"_blank",rel:"noopener noreferrer"},Ka=e(`<p>解密方法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> decryptByApiV3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  associate<span class="token punctuation">,</span> <span class="token comment">// 加密参数 - 类型</span>
  nonce<span class="token punctuation">,</span> <span class="token comment">// 加密参数 - 随机数</span>
  ciphertext <span class="token comment">// 加密密文</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  ciphertext <span class="token operator">=</span> <span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>ciphertext<span class="token punctuation">)</span>
  ciphertext <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>ciphertext<span class="token punctuation">,</span> <span class="token string">&#39;base64&#39;</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> authTag <span class="token operator">=</span> ciphertext<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>ciphertext<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">16</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> ciphertext<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> ciphertext<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">16</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> decipher <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">createDecipheriv</span><span class="token punctuation">(</span>
    <span class="token string">&#39;aes-256-gcm&#39;</span><span class="token punctuation">,</span>
    config<span class="token punctuation">.</span>apiV3Key<span class="token punctuation">,</span>
    nonce
  <span class="token punctuation">)</span>
  decipher<span class="token punctuation">.</span><span class="token function">setAuthTag</span><span class="token punctuation">(</span>authTag<span class="token punctuation">)</span>
  decipher<span class="token punctuation">.</span><span class="token function">setAAD</span><span class="token punctuation">(</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>associate<span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">let</span> decryptedText <span class="token operator">=</span> decipher<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
  decryptedText <span class="token operator">+=</span> decipher<span class="token punctuation">.</span><span class="token function">final</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> decryptedText
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建接口：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>// 获取支付通知
router.post(&#39;/notify&#39;, adminController.wxNotify)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>接口详情<code>wxNotify</code>：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 微信支付回调通知</span>
<span class="token keyword">async</span> <span class="token function">wxNotify</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> body <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request
  <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">resource_type</span><span class="token operator">:</span> type<span class="token punctuation">,</span> resource <span class="token punctuation">}</span> <span class="token operator">=</span> body
  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;encrypt-resource&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> ciphertext<span class="token punctuation">,</span> <span class="token literal-property property">associated_data</span><span class="token operator">:</span> associate<span class="token punctuation">,</span> nonce <span class="token punctuation">}</span> <span class="token operator">=</span> resource
    <span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token function">decryptByApiV3</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      associate<span class="token punctuation">,</span>
      nonce<span class="token punctuation">,</span>
      ciphertext
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;🚀 ~ file: AdminController.js ~ line 326 ~ AdminController ~ wxNotify ~ str&#39;</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span>
    <span class="token comment">// todo 入库，并修改订单的支付成功的状态</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
    <span class="token string">&#39;🚀 ~ file: AdminController.js ~ line 294 ~ AdminController ~ wxNotify ~ body&#39;</span><span class="token punctuation">,</span>
    body
  <span class="token punctuation">)</span>
  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">200</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>收到订单通知后，需要保存通知中的状态与数据（微信订单号）。</p></blockquote>`,7),Qa={id:"订单查询接口",tabindex:"-1"},nt=n("a",{class:"header-anchor",href:"#订单查询接口","aria-hidden":"true"},"#",-1),st={href:"https://front-end.toimc.com/notes-page/project/community-miniapp/12-%E6%94%AF%E4%BB%98%E4%B8%93%E9%A2%98.html#%E8%AE%A2%E5%8D%95%E6%9F%A5%E8%AF%A2%E6%8E%A5%E5%8F%A3",target:"_blank",rel:"noopener noreferrer"},at={href:"https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_5_2.shtml",target:"_blank",rel:"noopener noreferrer"},tt=e(`<p>有两种方案：</p><ul><li>微信支付订单号查询</li><li>商户订单号查询（一般采用这种）</li></ul><p><strong>请求URL：</strong> <code>https://api.mch.weixin.qq.com/v3/pay/transactions/out-trade-no/{out_trade_no}</code></p><p>**请求方式：**GET</p><p><strong>请求参数</strong></p><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">变量</th><th style="text-align:left;">类型[长度限制]</th><th style="text-align:left;">必填</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">直连商户号</td><td style="text-align:left;">mchid</td><td style="text-align:left;">string[1,32]</td><td style="text-align:left;">是</td><td style="text-align:left;">query 直连商户的商户号，由微信支付生成并下发。 示例值：1230000109</td></tr><tr><td style="text-align:left;">商户订单号</td><td style="text-align:left;">out_trade_no</td><td style="text-align:left;">string[6,32]</td><td style="text-align:left;">是</td><td style="text-align:left;">path 商户系统内部订单号，只能是数字、大小写字母_-*且在同一个商户号下唯一。 特殊规则：最小字符长度为6 示例值：1217752501201407033233368018</td></tr></tbody></table><p>示例：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://api.mch.weixin.qq.com/v3/pay/transactions/out-trade-no/1217752501201407033233368018?mchid=1230000109
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>这里要特别注意，url中有路径参数与query参数</p></blockquote><p>后端代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> qs <span class="token keyword">from</span> <span class="token string">&#39;qs&#39;</span>

<span class="token comment">// 微信支付订单查询 out_trade_no</span>
<span class="token comment">//  https://api.mch.weixin.qq.com/v3/pay/transactions/out-trade-no/{out_trade_no}</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getNofityByTradeNo</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://api.mch.weixin.qq.com/v3/pay/transactions/out-trade-no/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?</span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">const</span> params <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">mchid</span><span class="token operator">:</span> config<span class="token punctuation">.</span>mchid
    <span class="token punctuation">}</span>
    url <span class="token operator">+=</span> qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> headers<span class="token punctuation">,</span> nonceStr<span class="token punctuation">,</span> timestamp <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">getSignHeaders</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> instance<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">Authorization</span><span class="token operator">:</span> headers
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
      <span class="token string">&#39;🚀 ~ file: WxPay.js ~ line 147 ~ getNofityByTradeNo ~ timestamp&#39;</span><span class="token punctuation">,</span>
      timestamp
    <span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
      <span class="token string">&#39;🚀 ~ file: WxPay.js ~ line 147 ~ getNofityByTradeNo ~ nonceStr&#39;</span><span class="token punctuation">,</span>
      nonceStr
    <span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;🚀 ~ file: WxPay.js ~ line 53 ~ wxJSPAY ~ result&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>
    <span class="token comment">// todo result.data -&gt; trade_state trade_type -&gt; 存储订单的其他信息</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">getNofityByTradeNo error: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>error<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>至此，完成的小程序支付的一个完整的闭环。</p><blockquote><p>关于退款与退款通知与下单&amp;订单通知是类似，不再提供示例。</p></blockquote>`,13);function et(pt,ot){const a=o("ExternalLinkIcon");return i(),l("div",null,[f,n("h2",y,[E,s(),n("a",A,[s("#"),t(a)]),s("企业注册与税务")]),w,n("h3",x,[B,s(),n("a",q,[s("#"),t(a)]),s("注册企业流程")]),S,n("ul",null,[n("li",null,[j,F,n("p",null,[s("湖北企业查名查重："),n("a",P,[s("http://scjg.hubei.gov.cn/ICPSP/newNamecheck/nameCheck.action"),t(a)])]),n("p",null,[s("企业经营范围查询网址："),n("a",I,[s("https://jyfwyun.com/"),t(a)])])]),T,C]),n("h3",D,[N,s(),n("a",U,[s("#"),t(a)]),s("个人工商户与企业区别")]),H,n("h3",R,[L,s(),n("a",z,[s("#"),t(a)]),s("自己注册vs代注册")]),M,n("h3",J,[$,s(),n("a",Y,[s("#"),t(a)]),s("报税&开票")]),G,n("h3",V,[O,s(),n("a",Z,[s("#"),t(a)]),s("企业日常的开销")]),X,W,K,Q,n("h2",nn,[sn,s(),n("a",an,[s("#"),t(a)]),s("支付前置必要条件")]),tn,n("ul",null,[en,n("li",null,[n("p",null,[s("行业类目及资质要求，"),n("a",pn,[s("文档 (opens new window)"),t(a)]),s("；")]),on])]),ln,cn,n("ul",null,[n("li",null,[s("关于ICP备案，可以参考："),n("a",rn,[s("阿里云 (opens new window)"),t(a)]),s("、"),n("a",un,[s("腾讯云 (opens new window)"),t(a)]),s("（前置条件：域名、云服务器）；")]),dn,n("li",null,[s("微信商户号，对应的网址："),n("a",kn,[s("https://pay.weixin.qq.com/"),t(a)])])]),n("h2",mn,[vn,s(),n("a",hn,[s("#"),t(a)]),s("小程序支付流程")]),n("h3",gn,[bn,s(),n("a",_n,[s("#"),t(a)]),s("开发技巧")]),n("ul",null,[fn,n("li",null,[s("比较主流的支付方案，可以搜索一下有没有Node.js侧的npm包，例如："),n("a",yn,[s("wechatpay-axios-plugin (opens new window)"),t(a)]),s("是一个非常不错的支持v2/v3的npm包，ts风格；")]),En,An]),wn,n("h3",xn,[Bn,s(),n("a",qn,[s("#"),t(a)]),s("流程图")]),Sn,jn,Fn,Pn,n("p",null,[s("步骤3：用户下单发起支付，商户可通过"),n("a",In,[s("JSAPI下单 (opens new window)"),t(a)]),s("创建支付订单。")]),n("p",null,[s("步骤8： 用户可通过"),n("a",Tn,[s("小程序调起支付API (opens new window)"),t(a)]),s("调起微信支付，发起支付请求。")]),n("p",null,[s("步骤15：用户支付成功后，商户可接收到微信支付支付结果通知"),n("a",Cn,[s("支付通知API (opens new window)"),t(a)]),s("。")]),n("p",null,[s("步骤20：商户在没有接收到微信支付结果通知的情况下需要主动调用"),n("a",Dn,[s("查询订单API (opens new window)"),t(a)]),s("查询支付结果。")]),n("h2",Nn,[Un,s(),n("a",Hn,[s("#"),t(a)]),s("搭建开发环境")]),n("h3",Rn,[Ln,s(),n("a",zn,[s("#"),t(a)]),s("支付准备")]),Mn,n("p",null,[s("按照上面的流程，准备相关的开发环境，参考指引："),n("a",Jn,[s("官方链接(opens new window)"),t(a)])]),n("h3",$n,[Yn,s(),n("a",Gn,[s("#"),t(a)]),s("配置Https+域名解析")]),Vn,n("ul",null,[n("li",null,[n("p",null,[s("前置的章节有介绍HTTPS介绍，"),n("a",On,[s("文章"),t(a)])])]),Zn]),n("h3",Xn,[Wn,s(),n("a",Kn,[s("#"),t(a)]),s("配置API密钥")]),n("p",null,[n("a",Qn,[s("商户平台 (opens new window)"),t(a)]),s("-> 账户中心 -> API安全，分别配置API商户证书 + APIv3密钥")]),ns,n("h3",ss,[as,s(),n("a",ts,[s("#"),t(a)]),s("配置frp内网穿透")]),es,ps,os,n("ul",null,[n("li",null,[n("p",null,[s("下载frp包到本地，见"),n("a",is,[s("release (opens new window)"),t(a)]),s("（darwin是mac系统、windows、Linux要分arm与amd）；")])]),ls]),n("p",null,[s("如果运行失败，可以在"),n("a",cs,[s("官方网站 (opens new window)"),t(a)]),s("上查询失败的原因：")]),n("ul",null,[n("li",null,[s("官方FAQ："),n("a",rs,[s("https://gofrp.org/docs/faq/"),t(a)])]),n("li",null,[s("官方Issues："),n("a",us,[s("https://github.com/fatedier/frp/issues"),t(a)])])]),n("h2",ds,[ks,s(),n("a",ms,[s("#"),t(a)]),s("APIv3 vs APIv2")]),vs,hs,gs,n("p",null,[s("APIv3的文档："),n("a",bs,[s("官方链接(opens new window)"),t(a)])]),_s,n("h2",fs,[ys,s(),n("a",Es,[s("#"),t(a)]),s("JSAPI统一下单")]),n("h3",As,[ws,s(),n("a",xs,[s("#"),t(a)]),s("签名生成")]),n("p",null,[n("a",Bs,[s("官方文档(opens new window)"),t(a)])]),qs,n("h3",Ss,[js,s(),n("a",Fs,[s("#"),t(a)]),s("Authentication头部密钥串")]),Ps,n("ul",null,[Is,n("li",null,[n("a",Ts,[s("商户API证书 (opens new window)"),t(a)]),Cs,s("，用于"),n("a",Ds,[s("声明所使用的证书 (opens new window)"),t(a)]),s("（管理员账号登录微信商户管理后台，在API安全里面点击查看证书可以获取。）")]),Ns,Us,Hs,Rs]),Ls,n("h3",zs,[Ms,s(),n("a",Js,[s("#"),t(a)]),s("接口说明")]),n("p",null,[s("接口文档："),n("a",$s,[s("JSAPI(opens new window)"),t(a)])]),n("p",null,[s("**请求URL：**"),n("a",Ys,[s("https://api.mch.weixin.qq.com/v3/pay/transactions/jsapi"),t(a)])]),Gs,n("h2",Vs,[Os,s(),n("a",Zs,[s("#"),t(a)]),s("用户支付")]),n("h3",Xs,[Ws,s(),n("a",Ks,[s("#"),t(a)]),s("支付步骤")]),Qs,na,sa,aa,n("h3",ta,[ea,s(),n("a",pa,[s("#"),t(a)]),s("准备支付参数")]),oa,n("table",null,[ia,n("tbody",null,[n("tr",null,[la,ca,ra,ua,n("td",da,[s("当前的时间，其他详见"),n("a",ka,[s("时间戳规则 (opens new window)"),t(a)]),s("。 示例值：1414561699")])]),ma,va,ha,ga])]),n("h3",ba,[_a,s(),n("a",fa,[s("#"),t(a)]),s("后端接口开发")]),ya,n("h3",Ea,[Aa,s(),n("a",wa,[s("#"),t(a)]),s("前端模拟下单&支付")]),xa,n("h2",Ba,[qa,s(),n("a",Sa,[s("#"),t(a)]),s("订单查询")]),ja,Fa,Pa,n("h3",Ia,[Ta,s(),n("a",Ca,[s("#"),t(a)]),s("微信主动通知")]),Da,Na,n("p",null,[s("**回调URL：**该链接是通过基础下单接口中的请求参数“notify_url”来设置的，要求必须为https地址。请确保回调URL是外部可正常访问的，且不能携带后缀参数，否则可能导致商户无法接收到微信的回调通知信息。回调URL示例： “"),n("a",Ua,[s("https://pay.weixin.qq.com/wxpay/pay.action”"),t(a)])]),Ha,Ra,La,za,Ma,Ja,n("ol",null,[n("li",null,[s("用商户平台上设置的APIv3密钥【"),n("a",$a,[s("微信商户平台 (opens new window)"),t(a)]),s("—>账户设置—>API安全—>设置APIv3密钥】，记为key；")]),Ya,Ga]),n("p",null,[Va,s(" AEAD_AES_256_GCM算法的接口细节，请参考"),n("a",Oa,[s("rfc5116 (opens new window)"),t(a)]),s("。微信支付使用的密钥key长度为32个字节，随机串nonce长度12个字节，associated_data长度小于16个字节并可能为空。")]),n("h3",Za,[Xa,s(),n("a",Wa,[s("#"),t(a)]),s("主动通知后端接口")]),Ka,n("h3",Qa,[nt,s(),n("a",st,[s("#"),t(a)]),s("订单查询接口")]),n("p",null,[n("a",at,[s("官方文档(opens new window)"),t(a)])]),tt])}const ct=p(_,[["render",et],["__file","支付专题.html.vue"]]);export{ct as default};
