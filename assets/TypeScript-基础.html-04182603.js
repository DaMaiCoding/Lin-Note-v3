const e=JSON.parse('{"key":"v-3775cf24","path":"/%E5%9F%BA%E7%A1%80-%E8%BF%9B%E9%98%B6/%E5%9F%BA%E7%A1%80/TypeScript-%E5%9F%BA%E7%A1%80.html","title":"TypeScript-基础","lang":"zh-CN","frontmatter":{"description":"TypeScript-基础 1. TypeScript 与 JavaScript 有什么区别？ 规范代码 代码编译阶段就能及时发现错误, 说是编译, 其实就将 TypeScript 转换为 JavaScript 在原生js的基础上加上了一层类型定义 兼容性强, 兼容 js 的所有语法, 还包括更新版本的 ES6、ES7、ES8 2 TypeScript 工作流 image-20230211165723971","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/Lin-Note-v3/%E5%9F%BA%E7%A1%80-%E8%BF%9B%E9%98%B6/%E5%9F%BA%E7%A1%80/TypeScript-%E5%9F%BA%E7%A1%80.html"}],["meta",{"property":"og:site_name","content":"坡罗斜"}],["meta",{"property":"og:title","content":"TypeScript-基础"}],["meta",{"property":"og:description","content":"TypeScript-基础 1. TypeScript 与 JavaScript 有什么区别？ 规范代码 代码编译阶段就能及时发现错误, 说是编译, 其实就将 TypeScript 转换为 JavaScript 在原生js的基础上加上了一层类型定义 兼容性强, 兼容 js 的所有语法, 还包括更新版本的 ES6、ES7、ES8 2 TypeScript 工作流 image-20230211165723971"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/Lin-Note-v3/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-18T15:20:10.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"TypeScript-基础"}],["meta",{"property":"article:modified_time","content":"2023-06-18T15:20:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TypeScript-基础\\",\\"image\\":[\\"https://mister-hope.github.io/Lin-Note-v3/\\"],\\"dateModified\\":\\"2023-06-18T15:20:10.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1. TypeScript 与 JavaScript 有什么区别？","slug":"_1-typescript-与-javascript-有什么区别","link":"#_1-typescript-与-javascript-有什么区别","children":[]},{"level":2,"title":"2 TypeScript 工作流","slug":"_2-typescript-工作流","link":"#_2-typescript-工作流","children":[]},{"level":2,"title":"3. TypeScript 执行、编译","slug":"_3-typescript-执行、编译","link":"#_3-typescript-执行、编译","children":[]},{"level":2,"title":"4. TypeScript 基本语法","slug":"_4-typescript-基本语法","link":"#_4-typescript-基本语法","children":[]},{"level":2,"title":"5. Module 模块基本使用","slug":"_5-module-模块基本使用","link":"#_5-module-模块基本使用","children":[]},{"level":2,"title":"6. 内置对象","slug":"_6-内置对象","link":"#_6-内置对象","children":[]},{"level":2,"title":"7. 类的使用","slug":"_7-类的使用","link":"#_7-类的使用","children":[{"level":3,"title":"1. class 的基本使用 继承 和 类型约束 implements","slug":"_1-class-的基本使用-继承-和-类型约束-implements","link":"#_1-class-的基本使用-继承-和-类型约束-implements","children":[]},{"level":3,"title":"2. super 原理","slug":"_2-super-原理","link":"#_2-super-原理","children":[]},{"level":3,"title":"3. 静态方法","slug":"_3-静态方法","link":"#_3-静态方法","children":[]},{"level":3,"title":"4. get set 的使用","slug":"_4-get-set-的使用","link":"#_4-get-set-的使用","children":[]}]},{"level":2,"title":"8. 类型推导 和 类型别名","slug":"_8-类型推导-和-类型别名","link":"#_8-类型推导-和-类型别名","children":[]},{"level":2,"title":"9. 索引签名","slug":"_9-索引签名","link":"#_9-索引签名","children":[]},{"level":2,"title":"10. 迭代器 | 生成器 | set map","slug":"_10-迭代器-生成器-set-map","link":"#_10-迭代器-生成器-set-map","children":[]},{"level":2,"title":"11. tsconfig.json 配置文件","slug":"_11-tsconfig-json-配置文件","link":"#_11-tsconfig-json-配置文件","children":[]},{"level":2,"title":"12. namespace 命名空间","slug":"_12-namespace-命名空间","link":"#_12-namespace-命名空间","children":[]},{"level":2,"title":"13. 三斜线指令","slug":"_13-三斜线指令","link":"#_13-三斜线指令","children":[]},{"level":2,"title":"14. 声明文件 .d.ts","slug":"_14-声明文件-d-ts","link":"#_14-声明文件-d-ts","children":[]},{"level":2,"title":"15. Mixins 混入","slug":"_15-mixins-混入","link":"#_15-mixins-混入","children":[]},{"level":2,"title":"16. 装饰器 Decorator","slug":"_16-装饰器-decorator","link":"#_16-装饰器-decorator","children":[{"level":3,"title":"1. 类装饰器的使用","slug":"_1-类装饰器的使用","link":"#_1-类装饰器的使用","children":[]},{"level":3,"title":"2. 装饰器工厂","slug":"_2-装饰器工厂","link":"#_2-装饰器工厂","children":[]},{"level":3,"title":"3. 方法装饰器","slug":"_3-方法装饰器","link":"#_3-方法装饰器","children":[]},{"level":3,"title":"4. 参数装饰器","slug":"_4-参数装饰器","link":"#_4-参数装饰器","children":[]},{"level":3,"title":"5. 属性装饰器 (用的少)","slug":"_5-属性装饰器-用的少","link":"#_5-属性装饰器-用的少","children":[]}]},{"level":2,"title":"17. 协变、逆变、双向协变","slug":"_17-协变、逆变、双向协变","link":"#_17-协变、逆变、双向协变","children":[]},{"level":2,"title":"18. weakMap、weakSet、set、map","slug":"_18-weakmap、weakset、set、map","link":"#_18-weakmap、weakset、set、map","children":[{"level":3,"title":"WeakSet 和 WeakMap","slug":"weakset-和-weakmap","link":"#weakset-和-weakmap","children":[]},{"level":3,"title":"小结","slug":"小结","link":"#小结","children":[]}]},{"level":2,"title":"19. Partial & Pick","slug":"_19-partial-pick","link":"#_19-partial-pick","children":[{"level":3,"title":"小结","slug":"小结-1","link":"#小结-1","children":[]}]},{"level":2,"title":"20. Record & Readonly","slug":"_20-record-readonly","link":"#_20-record-readonly","children":[{"level":3,"title":"小结","slug":"小结-2","link":"#小结-2","children":[]}]},{"level":2,"title":"21. infer","slug":"_21-infer","link":"#_21-infer","children":[{"level":3,"title":"infer 类型提取","slug":"infer-类型提取","link":"#infer-类型提取","children":[]},{"level":3,"title":"infer 递归","slug":"infer-递归","link":"#infer-递归","children":[]}]},{"level":2,"title":"补充","slug":"补充","link":"#补充","children":[{"level":3,"title":"Object、object、{} 三者的区别","slug":"object、object、-三者的区别","link":"#object、object、-三者的区别","children":[]},{"level":3,"title":"代码雨","slug":"代码雨","link":"#代码雨","children":[]}]}],"git":{"createdTime":1687101610000,"updatedTime":1687101610000,"contributors":[{"name":"Jack_Lin","email":"1351123861@qq.com","commits":1}]},"readingTime":{"minutes":27.08,"words":8125},"filePathRelative":"基础-进阶/基础/TypeScript-基础.md","localizedDate":"2023年6月18日","excerpt":"<h1> TypeScript-基础</h1>\\n<h2> 1. TypeScript 与 JavaScript 有什么区别？</h2>\\n<ul>\\n<li>规范代码</li>\\n<li>代码编译阶段就能及时发现错误, 说是编译, 其实就将 TypeScript 转换为 JavaScript</li>\\n<li>在原生js的基础上加上了一层类型定义</li>\\n<li>兼容性强, 兼容 js 的所有语法, 还包括更新版本的 ES6、ES7、ES8</li>\\n</ul>\\n<h2> 2 TypeScript 工作流</h2>\\n<figure><figcaption>image-20230211165723971</figcaption></figure>","autoDesc":true}');export{e as data};
