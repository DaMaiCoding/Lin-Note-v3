import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as p,c as o,a,b as n,d as l,e as s}from"./app-4bc45b34.js";const c="/DaMaiCoding-Note/assets/image-20240527222735314-037552b9.png",u="/DaMaiCoding-Note/assets/image-20240527222834303-4583eeb0.png",r="/DaMaiCoding-Note/assets/image-20240527222927891-3a5df46f.png",d="/DaMaiCoding-Note/assets/image-20240523174656784-9735b444.png",h={},m=s(`<h1 id="_2025前端最新面试题-框架篇uniapp" tabindex="-1"><a class="header-anchor" href="#_2025前端最新面试题-框架篇uniapp" aria-hidden="true">#</a> 2025前端最新面试题-框架篇uniapp</h1><h2 id="_1-如何获取上一个页面的方法并执行" tabindex="-1"><a class="header-anchor" href="#_1-如何获取上一个页面的方法并执行" aria-hidden="true">#</a> 1. 如何获取上一个页面的方法并执行？</h2><p>使用 <code>getCurrentPages()</code> 获取当前页面栈（数组）</p><p>当前页面栈长度 - 2，获取上一个页面</p><p>通过 <code>$vm</code> 获取实例，从而调用其方法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token function">getCurrentPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> vm <span class="token operator">=</span> page<span class="token punctuation">.</span>$vm<span class="token punctuation">;</span>
<span class="token comment">// 监听生命周期，小程序端部分其他生命周期需在页面选项中配置过才可生效</span>
vm<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">&#39;hook:onHide&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;onHide&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取页面数据</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$data<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 调用页面方法</span>
vm<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-uniapp-的常用路由跳转有哪些" tabindex="-1"><a class="header-anchor" href="#_2-uniapp-的常用路由跳转有哪些" aria-hidden="true">#</a> 2. uniapp 的常用路由跳转有哪些？</h2><p>页面跳转：</p><table><thead><tr><th>uni.navigateTo</th><th>保留当前页面，跳转到应用内的某个页面</th></tr></thead><tbody><tr><td>uni.redirectTo</td><td>关闭当前页面，跳转到应用内的某个页面</td></tr><tr><td>uni.reLaunch</td><td>关闭所有页面，打开到应用内的某个页面</td></tr><tr><td>uni.navigateBack</td><td>关闭当前页面，返回上一页面或多级页面</td></tr></tbody></table><p>tabBar跳转：uni.switchTab</p><h2 id="_3-微信登录的实现流程" tabindex="-1"><a class="header-anchor" href="#_3-微信登录的实现流程" aria-hidden="true">#</a> 3. 微信登录的实现流程？</h2><ul><li>通过 uni.login 获取 code</li><li>通过按钮点击获取手机号授权，拿到手机号后</li><li>将 code、手机号发给后端获取 token</li><li>之后需要权限的接口都带这个 token 即可</li></ul><h2 id="_4-微信支付的实现流程" tabindex="-1"><a class="header-anchor" href="#_4-微信支付的实现流程" aria-hidden="true">#</a> 4. 微信支付的实现流程？</h2><ol><li>wx.login 获取 code，加上一些用户信息，传给后端，后端返回订单号，签名，随机字符串等下信息</li><li>使用 uni.requestPayment，填入对应参数，调起微信支付就可以了</li></ol><h2 id="_4-微信小程序的生命周期" tabindex="-1"><a class="header-anchor" href="#_4-微信小程序的生命周期" aria-hidden="true">#</a> 4. 微信小程序的生命周期？</h2><p>应用生命周期</p><figure><img src="`+c+'" alt="image-20240527222735314" tabindex="0" loading="lazy"><figcaption>image-20240527222735314</figcaption></figure><p>页面生命周期</p><figure><img src="'+u+'" alt="image-20240527222834303" tabindex="0" loading="lazy"><figcaption>image-20240527222834303</figcaption></figure><p>组件生命周期</p><figure><img src="'+r+'" alt="image-20240527222927891" tabindex="0" loading="lazy"><figcaption>image-20240527222927891</figcaption></figure><p>类似 vue 生命周期，但是没有 <code>beforUpdate</code>、<code>updated</code></p><h2 id="_5-组件-页面传值" tabindex="-1"><a class="header-anchor" href="#_5-组件-页面传值" aria-hidden="true">#</a> 5. 组件/页面传值</h2><p><strong>组件传值</strong></p><p>父子组件：props emit</p>',25),g=a("p",null,[n("兄弟组件：eventBus (uni."),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"o"),a("mi",null,"n"),a("mtext",null,"注册全局事件、"),a("mi",null,"u"),a("mi",null,"n"),a("mi",null,"i"),a("mi",{mathvariant:"normal"},".")]),a("annotation",{encoding:"application/x-tex"},"on注册全局事件、uni.")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6833em"}}),a("span",{class:"mord mathnormal"},"o"),a("span",{class:"mord mathnormal"},"n"),a("span",{class:"mord cjk_fallback"},"注册全局事件、"),a("span",{class:"mord mathnormal"},"u"),a("span",{class:"mord mathnormal"},"ni"),a("span",{class:"mord"},".")])])]),n("emit触发全局事件)")],-1),_=s('<p>页面间传值：路由跳转传值</p><h2 id="_6-微信小程序页面栈最多是多少个" tabindex="-1"><a class="header-anchor" href="#_6-微信小程序页面栈最多是多少个" aria-hidden="true">#</a> 6. 微信小程序页面栈最多是多少个？</h2><p>10个</p><h2 id="_7-uniapp-安卓、ios-兼容" tabindex="-1"><a class="header-anchor" href="#_7-uniapp-安卓、ios-兼容" aria-hidden="true">#</a> 7. uniapp 安卓、IOS 兼容？</h2><p>微信小程序自定义顶部导航栏</p><ul><li>胶囊高度、状态栏高度</li></ul><p>微信小程序 IOS 底部安全区域适配，就是苹果底部有一个小黑条</p><ul><li>wx.getSystemInfo 获取设备类型，根据这个值来判断是否是需要给底部 tabBar <ul><li><img src="'+d+'" alt="image-20240523174656784" tabindex="0" loading="lazy"><figcaption>image-20240523174656784</figcaption></li></ul></li></ul><p>微信小程序 ipad 上的字体适配</p><ul><li>本来是都使用 rpx，但是有个问题，ipad 屏幕大之后，字就大了，这是不合理的</li><li>所有我们对一些特殊文本信息，采用 px 的方案，而不是直接用 rpx</li></ul>',10),k={href:"https://uniapp.dcloud.net.cn/matter.html",target:"_blank",rel:"noopener noreferrer"},f=a("h2",{id:"_8-uniapp-上架问题",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_8-uniapp-上架问题","aria-hidden":"true"},"#"),n(" 8. uniapp 上架问题")],-1),b=a("ol",null,[a("li",null,[a("p",null,"uniapp 微信小程序上架流程")]),a("li",null,[a("p",null,"uniapp 微信小程序上架遇到什么问题了吗？")]),a("li",null,[a("p",null,"uniapp 安卓上架的流程，以及如何发布到应用商店，会遇到什么问题？")])],-1);function v(x,y){const t=i("ExternalLinkIcon");return p(),o("div",null,[m,g,_,a("p",null,[a("a",k,[n("uni-app官网 跨度适配 (dcloud.net.cn)"),l(t)])]),f,b])}const B=e(h,[["render",v],["__file","2025前端最新面试题-框架篇uniapp.html.vue"]]);export{B as default};
